{"ast":null,"code":"var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/bar/BarView.js"],"names":["_config","require","__DEV__","echarts","zrUtil","graphic","_helper","setLabel","Model","barItemStyle","BAR_BORDER_WIDTH_QUERY","extend","prototype","_default","extendChartView","type","render","seriesModel","ecModel","api","coordinateSystemType","get","_render","group","dispose","noop","data","getData","oldData","_data","coord","coordinateSystem","baseAxis","getBaseAxis","isHorizontalOrRadial","isHorizontal","dim","animationModel","isAnimationEnabled","diff","add","dataIndex","hasValue","itemModel","getItemModel","layout","getLayout","el","elementCreator","setItemGraphicEl","updateStyle","update","newIndex","oldIndex","getItemGraphicEl","remove","updateProps","shape","removeRect","removeSector","execute","eachItemGraphicEl","removeAll","cartesian2d","isUpdate","rect","Rect","rectShape","animateProperty","animateTarget","polar","isRadial","sector","Sector","sectorShape","startAngle","style","text","width","parent","r","r0","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","height","x","y","cx","cy","endAngle","isPolar","color","getItemVisual","opacity","itemStyleModel","getModel","hoverStyle","getBarItemStyle","setShape","useStyle","defaults","fill","cursorStyle","getShallow","attr","labelPositionOutside","setHoverStyle","rawLayout","lineWidth","Math","min","abs","module","exports"],"mappings":"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","sourcesContent":["var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}