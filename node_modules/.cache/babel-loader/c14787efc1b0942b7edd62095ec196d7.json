{"ast":null,"code":"var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\"); // CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\n\n\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/axisPointer.js"],"names":["echarts","require","zrUtil","axisPointerModelHelper","axisTrigger","registerPreprocessor","option","axisPointer","length","link","isArray","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","ecModel","api","getComponent","coordSysAxesInfo","collect","registerAction","type","event","update"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIE,sBAAsB,GAAGF,OAAO,CAAC,2BAAD,CAApC;;AAEA,IAAIG,WAAW,GAAGH,OAAO,CAAC,2BAAD,CAAzB;;AAEAA,OAAO,CAAC,gCAAD,CAAP;;AAEAA,OAAO,CAAC,+BAAD,CAAP;;AAEAA,OAAO,CAAC,oCAAD,CAAP,C,CAEA;AACA;AACA;;;AACAD,OAAO,CAACK,oBAAR,CAA6B,UAAUC,MAAV,EAAkB;AAC7C;AACA,MAAIA,MAAJ,EAAY;AACV,KAAC,CAACA,MAAM,CAACC,WAAR,IAAuBD,MAAM,CAACC,WAAP,CAAmBC,MAAnB,KAA8B,CAAtD,MAA6DF,MAAM,CAACC,WAAP,GAAqB,EAAlF;AACA,QAAIE,IAAI,GAAGH,MAAM,CAACC,WAAP,CAAmBE,IAA9B,CAFU,CAE0B;AACpC;AACA;;AAEA,QAAIA,IAAI,IAAI,CAACP,MAAM,CAACQ,OAAP,CAAeD,IAAf,CAAb,EAAmC;AACjCH,MAAAA,MAAM,CAACC,WAAP,CAAmBE,IAAnB,GAA0B,CAACA,IAAD,CAA1B;AACD;AACF;AACF,CAZD,E,CAYI;AACJ;;AAEAT,OAAO,CAACW,iBAAR,CAA0BX,OAAO,CAACY,QAAR,CAAiBC,SAAjB,CAA2BC,SAArD,EAAgE,UAAUC,OAAV,EAAmBC,GAAnB,EAAwB;AACtF;AACA;AACAD,EAAAA,OAAO,CAACE,YAAR,CAAqB,aAArB,EAAoCC,gBAApC,GAAuDf,sBAAsB,CAACgB,OAAvB,CAA+BJ,OAA/B,EAAwCC,GAAxC,CAAvD;AACD,CAJD,E,CAII;;AAEJhB,OAAO,CAACoB,cAAR,CAAuB;AACrBC,EAAAA,IAAI,EAAE,mBADe;AAErBC,EAAAA,KAAK,EAAE,mBAFc;AAGrBC,EAAAA,MAAM,EAAE;AAHa,CAAvB,EAIGnB,WAJH","sourcesContent":["var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);"]},"metadata":{},"sourceType":"script"}