{"ast":null,"code":"var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/helper/interactionMutex.js"],"names":["echarts","require","ATTR","take","zr","resourceKey","userKey","store","getStore","release","uKey","isTaken","registerAction","type","event","update","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIC,IAAI,GAAG,yBAAX;;AAEA,SAASC,IAAT,CAAcC,EAAd,EAAkBC,WAAlB,EAA+BC,OAA/B,EAAwC;AACtC,MAAIC,KAAK,GAAGC,QAAQ,CAACJ,EAAD,CAApB;AACAG,EAAAA,KAAK,CAACF,WAAD,CAAL,GAAqBC,OAArB;AACD;;AAED,SAASG,OAAT,CAAiBL,EAAjB,EAAqBC,WAArB,EAAkCC,OAAlC,EAA2C;AACzC,MAAIC,KAAK,GAAGC,QAAQ,CAACJ,EAAD,CAApB;AACA,MAAIM,IAAI,GAAGH,KAAK,CAACF,WAAD,CAAhB;;AAEA,MAAIK,IAAI,KAAKJ,OAAb,EAAsB;AACpBC,IAAAA,KAAK,CAACF,WAAD,CAAL,GAAqB,IAArB;AACD;AACF;;AAED,SAASM,OAAT,CAAiBP,EAAjB,EAAqBC,WAArB,EAAkC;AAChC,SAAO,CAAC,CAACG,QAAQ,CAACJ,EAAD,CAAR,CAAaC,WAAb,CAAT;AACD;;AAED,SAASG,QAAT,CAAkBJ,EAAlB,EAAsB;AACpB,SAAOA,EAAE,CAACF,IAAD,CAAF,KAAaE,EAAE,CAACF,IAAD,CAAF,GAAW,EAAxB,CAAP;AACD;AACD;;;;;;;;;AASAF,OAAO,CAACY,cAAR,CAAuB;AACrBC,EAAAA,IAAI,EAAE,kBADe;AAErBC,EAAAA,KAAK,EAAE,mBAFc;AAGrBC,EAAAA,MAAM,EAAE;AAHa,CAAvB,EAIG,YAAY,CAAE,CAJjB;AAKAC,OAAO,CAACb,IAAR,GAAeA,IAAf;AACAa,OAAO,CAACP,OAAR,GAAkBA,OAAlB;AACAO,OAAO,CAACL,OAAR,GAAkBA,OAAlB","sourcesContent":["var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;"]},"metadata":{},"sourceType":"script"}