{"ast":null,"code":"var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/model/mixin/textStyle.js"],"names":["textContain","require","graphicUtil","PATH_COLOR","_default","getTextColor","isEmphasis","ecModel","getShallow","get","getFont","fontStyle","fontWeight","fontSize","fontFamily","getTextRect","text","getBoundingRect","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,0BAAD,CAAzB;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,oBAAD,CAAzB;;AAEA,IAAIE,UAAU,GAAG,CAAC,WAAD,EAAc,OAAd,CAAjB;AACA,IAAIC,QAAQ,GAAG;AACb;;;;;AAKAC,EAAAA,YAAY,EAAE,UAAUC,UAAV,EAAsB;AAClC,QAAIC,OAAO,GAAG,KAAKA,OAAnB;AACA,WAAO,KAAKC,UAAL,CAAgB,OAAhB,MAA6B,CAACF,UAAD,IAAeC,OAAf,GAAyBA,OAAO,CAACE,GAAR,CAAYN,UAAZ,CAAzB,GAAmD,IAAhF,CAAP;AACD,GATY;;AAWb;;;;AAIAO,EAAAA,OAAO,EAAE,YAAY;AACnB,WAAOR,WAAW,CAACQ,OAAZ,CAAoB;AACzBC,MAAAA,SAAS,EAAE,KAAKH,UAAL,CAAgB,WAAhB,CADc;AAEzBI,MAAAA,UAAU,EAAE,KAAKJ,UAAL,CAAgB,YAAhB,CAFa;AAGzBK,MAAAA,QAAQ,EAAE,KAAKL,UAAL,CAAgB,UAAhB,CAHe;AAIzBM,MAAAA,UAAU,EAAE,KAAKN,UAAL,CAAgB,YAAhB;AAJa,KAApB,EAKJ,KAAKD,OALD,CAAP;AAMD,GAtBY;AAuBbQ,EAAAA,WAAW,EAAE,UAAUC,IAAV,EAAgB;AAC3B,WAAOhB,WAAW,CAACiB,eAAZ,CAA4BD,IAA5B,EAAkC,KAAKN,OAAL,EAAlC,EAAkD,KAAKF,UAAL,CAAgB,OAAhB,CAAlD,EAA4E,KAAKA,UAAL,CAAgB,eAAhB,KAAoC,KAAKA,UAAL,CAAgB,UAAhB,CAAhH,EAA6I,KAAKA,UAAL,CAAgB,SAAhB,CAA7I,EAAyK,KAAKA,UAAL,CAAgB,MAAhB,CAAzK,EAAkM,KAAKA,UAAL,CAAgB,cAAhB,CAAlM,CAAP;AACD;AAzBY,CAAf;AA2BAU,MAAM,CAACC,OAAP,GAAiBf,QAAjB","sourcesContent":["var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}