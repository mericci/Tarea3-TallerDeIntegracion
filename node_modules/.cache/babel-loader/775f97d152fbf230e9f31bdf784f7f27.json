{"ast":null,"code":"var _jsxFileName = \"/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/src/components/Chart.jsx\";\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from 'echarts/lib/echarts';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    // const option = {\n    //     title: {\n    //         text: this.props.title,\n    //         textStyle: {\n    //             color: '#FFF'\n    //         }\n    //     },\n    //     tooltip: {\n    //         trigger: 'axis',\n    //         // formatter: function (params) {\n    //         //     params = params[0];\n    //         //     var date = new Date(params.name);\n    //         //     return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\n    //         // },\n    //         axisPointer: {\n    //             animation: false\n    //         }\n    //     },\n    //     xAxis: {\n    //         type: 'time',\n    //         splitLine: {\n    //             show: false\n    //         },\n    //         axisLine: {\n    //             lineStyle: {\n    //                 color: '#FFF'\n    //             }\n    //         }\n    //     },\n    //     yAxis: {\n    //         type: 'value',\n    //         boundaryGap: [0, '100%'],\n    //         splitLine: {\n    //             show: false\n    //         },\n    //         axisLine: {\n    //             lineStyle: {\n    //                 color: '#FFF'\n    //             }\n    //         }\n    //     },\n    //     series: [{\n    //         name: 'CHART',\n    //         type: 'line',\n    //         showSymbol: false,\n    //         hoverAnimation: false,\n    //         data: this.props.data\n    //     }]\n    // };\n    // setInterval(function () {\n    //     let chart = echarts.init(document.getElementById('chart'));\n    //     this.option.series[0].data = this.props.data;\n    //     chart.setOption(option);\n    // }, 1000);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\n;\nexport default Chart;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/src/components/Chart.jsx"],"names":["React","Component","ReactEcharts","echarts","am4core","am4charts","am4themes_animated","useTheme","Chart","constructor","props","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAO,KAAKC,SAAZ,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AAEAF,OAAO,CAACG,QAAR,CAAiBD,kBAAjB;;AAGA,MAAME,KAAN,SAAoBP,SAApB,CAA8B;AAC1BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AAGDC,EAAAA,MAAM,GAAG;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA,wBACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAeH;;AApFyB;;AAsF7B;AAED,eAAeJ,KAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from 'echarts/lib/echarts';\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\n\nclass Chart extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\n        };    \n    };\n\n        \n    render() {\n       \n\n        // const option = {\n        //     title: {\n        //         text: this.props.title,\n        //         textStyle: {\n        //             color: '#FFF'\n        //         }\n        //     },\n        //     tooltip: {\n        //         trigger: 'axis',\n        //         // formatter: function (params) {\n        //         //     params = params[0];\n        //         //     var date = new Date(params.name);\n        //         //     return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\n        //         // },\n        //         axisPointer: {\n        //             animation: false\n        //         }\n        //     },\n        //     xAxis: {\n        //         type: 'time',\n        //         splitLine: {\n        //             show: false\n        //         },\n        //         axisLine: {\n        //             lineStyle: {\n        //                 color: '#FFF'\n        //             }\n        //         }\n        //     },\n        //     yAxis: {\n        //         type: 'value',\n        //         boundaryGap: [0, '100%'],\n        //         splitLine: {\n        //             show: false\n        //         },\n        //         axisLine: {\n        //             lineStyle: {\n        //                 color: '#FFF'\n        //             }\n        //         }\n        //     },\n        //     series: [{\n        //         name: 'CHART',\n        //         type: 'line',\n        //         showSymbol: false,\n        //         hoverAnimation: false,\n        //         data: this.props.data\n        //     }]\n        // };\n\n        // setInterval(function () {\n        //     let chart = echarts.init(document.getElementById('chart'));\n        //     this.option.series[0].data = this.props.data;\n        \n        //     chart.setOption(option);\n        // }, 1000);\n        \n        return (\n            <div id=\"chart\">\n                {/* <ReactEcharts\n                    \n                    option={option}\n                    style={{height: 360}}\n                    opts={{renderer: 'svg'}}\n                    onChartReady={setInterval}\n                    notMerge={true}\n                    lazyUpdate={true}\n                    \n                    \n                />  */}\n        </div>\n        );\n    }\n\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}