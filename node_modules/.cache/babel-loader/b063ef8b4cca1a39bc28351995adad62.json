{"ast":null,"code":"var echarts = require(\"../../echarts\");\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\n\n\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected',\n  update: 'updateVisual'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/axis/parallelAxisAction.js"],"names":["echarts","require","actionInfo","type","event","update","registerAction","payload","ecModel","eachComponent","mainType","query","parallelAxisModel","axis","model","setActiveIntervals","intervals","parallelModel","setAxisExpand"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;AAEA;;;;;;;AAKA,IAAIC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE,gBADS;AAEfC,EAAAA,KAAK,EAAE,kBAFQ;AAGfC,EAAAA,MAAM,EAAE;AAHO,CAAjB;AAKAL,OAAO,CAACM,cAAR,CAAuBJ,UAAvB,EAAmC,UAAUK,OAAV,EAAmBC,OAAnB,EAA4B;AAC7DA,EAAAA,OAAO,CAACC,aAAR,CAAsB;AACpBC,IAAAA,QAAQ,EAAE,cADU;AAEpBC,IAAAA,KAAK,EAAEJ;AAFa,GAAtB,EAGG,UAAUK,iBAAV,EAA6B;AAC9BA,IAAAA,iBAAiB,CAACC,IAAlB,CAAuBC,KAAvB,CAA6BC,kBAA7B,CAAgDR,OAAO,CAACS,SAAxD;AACD,GALD;AAMD,CAPD;AAQA;;;;AAIAhB,OAAO,CAACM,cAAR,CAAuB,oBAAvB,EAA6C,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACvEA,EAAAA,OAAO,CAACC,aAAR,CAAsB;AACpBC,IAAAA,QAAQ,EAAE,UADU;AAEpBC,IAAAA,KAAK,EAAEJ;AAFa,GAAtB,EAGG,UAAUU,aAAV,EAAyB;AAC1BA,IAAAA,aAAa,CAACC,aAAd,CAA4BX,OAA5B;AACD,GALD;AAMD,CAPD","sourcesContent":["var echarts = require(\"../../echarts\");\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected',\n  update: 'updateVisual'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});"]},"metadata":{},"sourceType":"script"}