{"ast":null,"code":"var List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  getInitialData: function (option, ecModel) {\n    var parallelModel = ecModel.getComponent('parallel', this.get('parallelIndex'));\n    var parallelAxisIndices = parallelModel.parallelAxisIndex;\n    var rawData = option.data;\n    var modelDims = parallelModel.dimensions;\n    var dataDims = generateDataDims(modelDims, rawData);\n    var dataDimsInfo = zrUtil.map(dataDims, function (dim, dimIndex) {\n      var modelDimsIndex = zrUtil.indexOf(modelDims, dim);\n      var axisModel = modelDimsIndex >= 0 && ecModel.getComponent('parallelAxis', parallelAxisIndices[modelDimsIndex]);\n\n      if (axisModel && axisModel.get('type') === 'category') {\n        translateCategoryValue(axisModel, dim, rawData);\n        return {\n          name: dim,\n          type: 'ordinal'\n        };\n      } else if (modelDimsIndex < 0) {\n        return completeDimensions.guessOrdinal(rawData, dimIndex) ? {\n          name: dim,\n          type: 'ordinal'\n        } : dim;\n      } else {\n        return dim;\n      }\n    });\n    var list = new List(dataDimsInfo, this);\n    list.initData(rawData); // Anication is forbiden in progressive data mode.\n\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    return list;\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      normal: {\n        show: false\n      },\n      emphasis: {\n        show: false\n      }\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      normal: {\n        width: 1,\n        opacity: 0.45,\n        type: 'solid'\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction translateCategoryValue(axisModel, dim, rawData) {\n  var axisData = axisModel.get('data');\n  var numberDim = convertDimNameToNumber(dim);\n\n  if (axisData && axisData.length) {\n    zrUtil.each(rawData, function (dataItem) {\n      if (!dataItem) {\n        return;\n      } // FIXME\n      // time consuming, should use hash?\n\n\n      var index = zrUtil.indexOf(axisData, dataItem[numberDim]);\n      dataItem[numberDim] = index >= 0 ? index : NaN;\n    });\n  } // FIXME\n  // 如果没有设置axis data, 应自动算出，或者提示。\n\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nfunction generateDataDims(modelDims, rawData) {\n  // parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  // We detect max dim by parallelModel.dimensions and fist\n  // item in rawData arbitrarily.\n  var maxDimNum = 0;\n  zrUtil.each(modelDims, function (dimName) {\n    var numberDim = convertDimNameToNumber(dimName);\n    numberDim > maxDimNum && (maxDimNum = numberDim);\n  });\n  var firstItem = rawData[0];\n\n  if (firstItem && firstItem.length - 1 > maxDimNum) {\n    maxDimNum = firstItem.length - 1;\n  }\n\n  var dataDims = [];\n\n  for (var i = 0; i <= maxDimNum; i++) {\n    dataDims.push('dim' + i);\n  }\n\n  return dataDims;\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/parallel/ParallelSeries.js"],"names":["List","require","zrUtil","SeriesModel","completeDimensions","_default","extend","type","dependencies","visualColorAccessPath","getInitialData","option","ecModel","parallelModel","getComponent","get","parallelAxisIndices","parallelAxisIndex","rawData","data","modelDims","dimensions","dataDims","generateDataDims","dataDimsInfo","map","dim","dimIndex","modelDimsIndex","indexOf","axisModel","translateCategoryValue","name","guessOrdinal","list","initData","progressive","animation","getRawIndicesByActiveState","activeState","coordSys","coordinateSystem","getData","indices","eachActiveState","theActiveState","dataIndex","push","getRawIndex","defaultOption","zlevel","z","parallelIndex","label","normal","show","emphasis","inactiveOpacity","activeOpacity","lineStyle","width","opacity","smooth","animationEasing","axisData","numberDim","convertDimNameToNumber","length","each","dataItem","index","NaN","dimName","replace","maxDimNum","firstItem","i","module","exports"],"mappings":"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","sourcesContent":["var List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  getInitialData: function (option, ecModel) {\n    var parallelModel = ecModel.getComponent('parallel', this.get('parallelIndex'));\n    var parallelAxisIndices = parallelModel.parallelAxisIndex;\n    var rawData = option.data;\n    var modelDims = parallelModel.dimensions;\n    var dataDims = generateDataDims(modelDims, rawData);\n    var dataDimsInfo = zrUtil.map(dataDims, function (dim, dimIndex) {\n      var modelDimsIndex = zrUtil.indexOf(modelDims, dim);\n      var axisModel = modelDimsIndex >= 0 && ecModel.getComponent('parallelAxis', parallelAxisIndices[modelDimsIndex]);\n\n      if (axisModel && axisModel.get('type') === 'category') {\n        translateCategoryValue(axisModel, dim, rawData);\n        return {\n          name: dim,\n          type: 'ordinal'\n        };\n      } else if (modelDimsIndex < 0) {\n        return completeDimensions.guessOrdinal(rawData, dimIndex) ? {\n          name: dim,\n          type: 'ordinal'\n        } : dim;\n      } else {\n        return dim;\n      }\n    });\n    var list = new List(dataDimsInfo, this);\n    list.initData(rawData); // Anication is forbiden in progressive data mode.\n\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    return list;\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      normal: {\n        show: false\n      },\n      emphasis: {\n        show: false\n      }\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      normal: {\n        width: 1,\n        opacity: 0.45,\n        type: 'solid'\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction translateCategoryValue(axisModel, dim, rawData) {\n  var axisData = axisModel.get('data');\n  var numberDim = convertDimNameToNumber(dim);\n\n  if (axisData && axisData.length) {\n    zrUtil.each(rawData, function (dataItem) {\n      if (!dataItem) {\n        return;\n      } // FIXME\n      // time consuming, should use hash?\n\n\n      var index = zrUtil.indexOf(axisData, dataItem[numberDim]);\n      dataItem[numberDim] = index >= 0 ? index : NaN;\n    });\n  } // FIXME\n  // 如果没有设置axis data, 应自动算出，或者提示。\n\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nfunction generateDataDims(modelDims, rawData) {\n  // parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  // We detect max dim by parallelModel.dimensions and fist\n  // item in rawData arbitrarily.\n  var maxDimNum = 0;\n  zrUtil.each(modelDims, function (dimName) {\n    var numberDim = convertDimNameToNumber(dimName);\n    numberDim > maxDimNum && (maxDimNum = numberDim);\n  });\n  var firstItem = rawData[0];\n\n  if (firstItem && firstItem.length - 1 > maxDimNum) {\n    maxDimNum = firstItem.length - 1;\n  }\n\n  var dataDims = [];\n\n  for (var i = 0; i <= maxDimNum; i++) {\n    dataDims.push('dim' + i);\n  }\n\n  return dataDims;\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}