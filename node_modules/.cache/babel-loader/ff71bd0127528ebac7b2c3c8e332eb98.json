{"ast":null,"code":"var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\n\n\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.normal.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/sankey/sankeyVisual.js"],"names":["VisualMapping","require","zrUtil","_default","ecModel","payload","eachSeriesByType","seriesModel","graph","getGraph","nodes","sort","a","b","getLayout","value","minValue","maxValue","length","each","node","mapping","type","mappingMethod","dataExtent","visual","get","mapValueToColor","mapValueToVisual","setVisual","itemModel","getModel","customColor","module","exports"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,4BAAD,CAA3B;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;AAEA;;;;;;AAIA,SAASE,QAAT,CAAkBC,OAAlB,EAA2BC,OAA3B,EAAoC;AAClCD,EAAAA,OAAO,CAACE,gBAAR,CAAyB,QAAzB,EAAmC,UAAUC,WAAV,EAAuB;AACxD,QAAIC,KAAK,GAAGD,WAAW,CAACE,QAAZ,EAAZ;AACA,QAAIC,KAAK,GAAGF,KAAK,CAACE,KAAlB;AACAA,IAAAA,KAAK,CAACC,IAAN,CAAW,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACzB,aAAOD,CAAC,CAACE,SAAF,GAAcC,KAAd,GAAsBF,CAAC,CAACC,SAAF,GAAcC,KAA3C;AACD,KAFD;AAGA,QAAIC,QAAQ,GAAGN,KAAK,CAAC,CAAD,CAAL,CAASI,SAAT,GAAqBC,KAApC;AACA,QAAIE,QAAQ,GAAGP,KAAK,CAACA,KAAK,CAACQ,MAAN,GAAe,CAAhB,CAAL,CAAwBJ,SAAxB,GAAoCC,KAAnD;AACAb,IAAAA,MAAM,CAACiB,IAAP,CAAYT,KAAZ,EAAmB,UAAUU,IAAV,EAAgB;AACjC,UAAIC,OAAO,GAAG,IAAIrB,aAAJ,CAAkB;AAC9BsB,QAAAA,IAAI,EAAE,OADwB;AAE9BC,QAAAA,aAAa,EAAE,QAFe;AAG9BC,QAAAA,UAAU,EAAE,CAACR,QAAD,EAAWC,QAAX,CAHkB;AAI9BQ,QAAAA,MAAM,EAAElB,WAAW,CAACmB,GAAZ,CAAgB,OAAhB;AAJsB,OAAlB,CAAd;AAMA,UAAIC,eAAe,GAAGN,OAAO,CAACO,gBAAR,CAAyBR,IAAI,CAACN,SAAL,GAAiBC,KAA1C,CAAtB;AACAK,MAAAA,IAAI,CAACS,SAAL,CAAe,OAAf,EAAwBF,eAAxB,EARiC,CAQS;;AAE1C,UAAIG,SAAS,GAAGV,IAAI,CAACW,QAAL,EAAhB;AACA,UAAIC,WAAW,GAAGF,SAAS,CAACJ,GAAV,CAAc,wBAAd,CAAlB;;AAEA,UAAIM,WAAW,IAAI,IAAnB,EAAyB;AACvBZ,QAAAA,IAAI,CAACS,SAAL,CAAe,OAAf,EAAwBG,WAAxB;AACD;AACF,KAhBD;AAiBD,GAzBD;AA0BD;;AAEDC,MAAM,CAACC,OAAP,GAAiB/B,QAAjB","sourcesContent":["var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.normal.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}