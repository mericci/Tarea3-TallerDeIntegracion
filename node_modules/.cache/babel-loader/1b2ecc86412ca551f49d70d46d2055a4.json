{"ast":null,"code":"var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\n\n\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/helper/SymbolDraw.js"],"names":["graphic","require","SymbolClz","SymbolDraw","symbolCtor","group","Group","_symbolCtor","symbolDrawProto","prototype","symbolNeedsDraw","data","idx","isIgnore","point","getItemLayout","isNaN","getItemVisual","updateData","seriesModel","hostModel","oldData","_data","SymbolCtor","seriesScope","itemStyle","getModel","getItemStyle","hoverItemStyle","symbolRotate","get","symbolOffset","hoverAnimation","labelModel","hoverLabelModel","cursorStyle","diff","add","newIdx","symbolEl","attr","setItemGraphicEl","update","oldIdx","getItemGraphicEl","remove","updateProps","position","el","fadeOut","execute","updateLayout","eachItemGraphicEl","enableAnimation","removeAll","_default","module","exports"],"mappings":"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","sourcesContent":["var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}