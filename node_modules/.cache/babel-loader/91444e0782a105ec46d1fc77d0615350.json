{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n/**\n * @file  This file used to draw tree view\n */\n\n\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.normal.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label.normal');\n  seriesScope.hoverLabelModel = itemModel.getModel('label.emphasis');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/tree/TreeView.js"],"names":["zrUtil","require","graphic","SymbolClz","_layoutHelper","radialCoordinate","echarts","_default","extendChartView","type","init","ecModel","api","_oldTree","_mainGroup","Group","group","add","render","seriesModel","payload","data","getData","layoutInfo","layout","get","attr","x","width","y","height","oldData","_data","seriesScope","expandAndCollapse","orient","curvature","symbolRotate","symbolOffset","hoverAnimation","useNameLabel","fadeIn","diff","newIdx","symbolNeedsDraw","updateNode","update","oldIdx","symbolEl","getItemGraphicEl","removeNode","remove","execute","eachItemGraphicEl","el","dataIndex","off","on","dispatchAction","seriesId","id","dispose","removeAll","getItemLayout","isNaN","getItemVisual","getTreeNodeStyle","node","itemModel","itemStyle","getModel","getItemStyle","hoverItemStyle","lineStyle","getLineStyle","labelModel","hoverLabelModel","isExpand","children","length","symbolInnerColor","fill","isInit","tree","getNodeByDataIndex","virtualRoot","root","source","parentNode","sourceSymbolEl","sourceLayout","getLayout","sourceOldLayout","position","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","updateData","__radialRawX","__radialRawY","setItemGraphicEl","updateProps","symbolPath","getSymbolPath","realRoot","rootLayout","rad","isLeft","center","Math","atan2","PI","textPosition","setStyle","textRotation","textOrigin","verticalAlign","edge","__edge","BezierCurve","shape","getEdgeShape","style","defaults","opacity","fadeOut","keepLabel","cpx1","cpy1","cpx2","cpy2","x1","y1","x2","y2","radialCoor1","radialCoor2","radialCoor3","radialCoor4","module","exports"],"mappings":"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","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.normal.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label.normal');\n  seriesScope.hoverLabelModel = itemModel.getModel('label.emphasis');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}