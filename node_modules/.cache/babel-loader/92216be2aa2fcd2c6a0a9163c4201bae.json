{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\"); // TODO Better on polar\n\n\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y], true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  updateLayout: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle.normal').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/marker/MarkAreaView.js"],"names":["zrUtil","require","colorUtil","List","numberUtil","graphic","markerHelper","MarkerView","markAreaTransform","seriesModel","coordSys","maModel","item","lt","dataTransform","rb","retrieve","ltCoord","coord","rbCoord","Infinity","result","mergeAll","x0","x","y0","y","x1","y1","isInifinity","val","isNaN","isFinite","ifMarkLineHasOnlyDim","dimIndex","fromCoord","toCoord","otherDimIndex","markAreaFilter","type","dataFilter","getSingleMarkerEndPoint","data","idx","dims","api","coordinateSystem","itemModel","getItemModel","point","xPx","parsePercent","get","getWidth","yPx","getHeight","getMarkerPosition","getValues","dataToPoint","xAxis","getAxis","yAxis","toGlobalCoord","getExtent","dimPermutations","extend","updateLayout","markAreaModel","ecModel","eachSeries","areaData","getData","each","points","map","dim","setItemLayout","el","getItemGraphicEl","setShape","renderSeries","seriesName","name","seriesData","areaGroupMap","markerGroupMap","polygonGroup","set","group","Group","add","__keep","createList","setData","setItemVisual","color","getVisual","diff","__data","polygon","Polygon","shape","getItemLayout","setItemGraphicEl","update","newIdx","oldIdx","updateProps","remove","execute","eachItemGraphicEl","labelModel","getModel","labelHoverModel","getItemVisual","useStyle","defaults","getItemStyle","fill","modifyAlpha","stroke","hoverStyle","setLabelStyle","style","labelFetcher","labelDataIndex","defaultText","getName","isRectText","autoColor","setHoverStyle","dataModel","silent","coordDimsInfos","dimensions","coordDim","info","getDimensionInfo","coordDimToDataDim","optData","curry","filter","dimValueGetter","dimName","dataIndex","Math","floor","value","initData","hasItemOption"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,wBAAD,CAAvB;;AAEA,IAAIE,IAAI,GAAGF,OAAO,CAAC,iBAAD,CAAlB;;AAEA,IAAIG,UAAU,GAAGH,OAAO,CAAC,mBAAD,CAAxB;;AAEA,IAAII,OAAO,GAAGJ,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAIK,YAAY,GAAGL,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIM,UAAU,GAAGN,OAAO,CAAC,cAAD,CAAxB,C,CAEA;;;AACA,IAAIO,iBAAiB,GAAG,UAAUC,WAAV,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,IAA1C,EAAgD;AACtE,MAAIC,EAAE,GAAGP,YAAY,CAACQ,aAAb,CAA2BL,WAA3B,EAAwCG,IAAI,CAAC,CAAD,CAA5C,CAAT;AACA,MAAIG,EAAE,GAAGT,YAAY,CAACQ,aAAb,CAA2BL,WAA3B,EAAwCG,IAAI,CAAC,CAAD,CAA5C,CAAT;AACA,MAAII,QAAQ,GAAGhB,MAAM,CAACgB,QAAtB,CAHsE,CAGtC;;AAEhC,MAAIC,OAAO,GAAGJ,EAAE,CAACK,KAAjB;AACA,MAAIC,OAAO,GAAGJ,EAAE,CAACG,KAAjB;AACAD,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAaD,QAAQ,CAACC,OAAO,CAAC,CAAD,CAAR,EAAa,CAACG,QAAd,CAArB;AACAH,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAaD,QAAQ,CAACC,OAAO,CAAC,CAAD,CAAR,EAAa,CAACG,QAAd,CAArB;AACAD,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAaH,QAAQ,CAACG,OAAO,CAAC,CAAD,CAAR,EAAaC,QAAb,CAArB;AACAD,EAAAA,OAAO,CAAC,CAAD,CAAP,GAAaH,QAAQ,CAACG,OAAO,CAAC,CAAD,CAAR,EAAaC,QAAb,CAArB,CAVsE,CAUzB;;AAE7C,MAAIC,MAAM,GAAGrB,MAAM,CAACsB,QAAP,CAAgB,CAAC,EAAD,EAAKT,EAAL,EAASE,EAAT,CAAhB,CAAb;AACAM,EAAAA,MAAM,CAACH,KAAP,GAAe,CAACL,EAAE,CAACK,KAAJ,EAAWH,EAAE,CAACG,KAAd,CAAf;AACAG,EAAAA,MAAM,CAACE,EAAP,GAAYV,EAAE,CAACW,CAAf;AACAH,EAAAA,MAAM,CAACI,EAAP,GAAYZ,EAAE,CAACa,CAAf;AACAL,EAAAA,MAAM,CAACM,EAAP,GAAYZ,EAAE,CAACS,CAAf;AACAH,EAAAA,MAAM,CAACO,EAAP,GAAYb,EAAE,CAACW,CAAf;AACA,SAAOL,MAAP;AACD,CAnBD;;AAqBA,SAASQ,WAAT,CAAqBC,GAArB,EAA0B;AACxB,SAAO,CAACC,KAAK,CAACD,GAAD,CAAN,IAAe,CAACE,QAAQ,CAACF,GAAD,CAA/B;AACD,C,CAAC;;;AAGF,SAASG,oBAAT,CAA8BC,QAA9B,EAAwCC,SAAxC,EAAmDC,OAAnD,EAA4D1B,QAA5D,EAAsE;AACpE,MAAI2B,aAAa,GAAG,IAAIH,QAAxB;AACA,SAAOL,WAAW,CAACM,SAAS,CAACE,aAAD,CAAV,CAAX,IAAyCR,WAAW,CAACO,OAAO,CAACC,aAAD,CAAR,CAA3D;AACD;;AAED,SAASC,cAAT,CAAwB5B,QAAxB,EAAkCE,IAAlC,EAAwC;AACtC,MAAIuB,SAAS,GAAGvB,IAAI,CAACM,KAAL,CAAW,CAAX,CAAhB;AACA,MAAIkB,OAAO,GAAGxB,IAAI,CAACM,KAAL,CAAW,CAAX,CAAd;;AAEA,MAAIR,QAAQ,CAAC6B,IAAT,KAAkB,aAAtB,EAAqC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,QAAIJ,SAAS,IAAIC,OAAb,KAAyBH,oBAAoB,CAAC,CAAD,EAAIE,SAAJ,EAAeC,OAAf,EAAwB1B,QAAxB,CAApB,IAAyDuB,oBAAoB,CAAC,CAAD,EAAIE,SAAJ,EAAeC,OAAf,EAAwB1B,QAAxB,CAAtG,CAAJ,EAA8I;AAC5I,aAAO,IAAP;AACD;AACF;;AAED,SAAOJ,YAAY,CAACkC,UAAb,CAAwB9B,QAAxB,EAAkC;AACvCQ,IAAAA,KAAK,EAAEiB,SADgC;AAEvCX,IAAAA,CAAC,EAAEZ,IAAI,CAACW,EAF+B;AAGvCG,IAAAA,CAAC,EAAEd,IAAI,CAACa;AAH+B,GAAlC,KAIDnB,YAAY,CAACkC,UAAb,CAAwB9B,QAAxB,EAAkC;AACtCQ,IAAAA,KAAK,EAAEkB,OAD+B;AAEtCZ,IAAAA,CAAC,EAAEZ,IAAI,CAACe,EAF8B;AAGtCD,IAAAA,CAAC,EAAEd,IAAI,CAACgB;AAH8B,GAAlC,CAJN;AASD,C,CAAC;;;AAGF,SAASa,uBAAT,CAAiCC,IAAjC,EAAuCC,GAAvC,EAA4CC,IAA5C,EAAkDnC,WAAlD,EAA+DoC,GAA/D,EAAoE;AAClE,MAAInC,QAAQ,GAAGD,WAAW,CAACqC,gBAA3B;AACA,MAAIC,SAAS,GAAGL,IAAI,CAACM,YAAL,CAAkBL,GAAlB,CAAhB;AACA,MAAIM,KAAJ;AACA,MAAIC,GAAG,GAAG9C,UAAU,CAAC+C,YAAX,CAAwBJ,SAAS,CAACK,GAAV,CAAcR,IAAI,CAAC,CAAD,CAAlB,CAAxB,EAAgDC,GAAG,CAACQ,QAAJ,EAAhD,CAAV;AACA,MAAIC,GAAG,GAAGlD,UAAU,CAAC+C,YAAX,CAAwBJ,SAAS,CAACK,GAAV,CAAcR,IAAI,CAAC,CAAD,CAAlB,CAAxB,EAAgDC,GAAG,CAACU,SAAJ,EAAhD,CAAV;;AAEA,MAAI,CAACxB,KAAK,CAACmB,GAAD,CAAN,IAAe,CAACnB,KAAK,CAACuB,GAAD,CAAzB,EAAgC;AAC9BL,IAAAA,KAAK,GAAG,CAACC,GAAD,EAAMI,GAAN,CAAR;AACD,GAFD,MAEO;AACL;AACA,QAAI7C,WAAW,CAAC+C,iBAAhB,EAAmC;AACjC;AACAP,MAAAA,KAAK,GAAGxC,WAAW,CAAC+C,iBAAZ,CAA8Bd,IAAI,CAACe,SAAL,CAAeb,IAAf,EAAqBD,GAArB,CAA9B,CAAR;AACD,KAHD,MAGO;AACL,UAAInB,CAAC,GAAGkB,IAAI,CAACU,GAAL,CAASR,IAAI,CAAC,CAAD,CAAb,EAAkBD,GAAlB,CAAR;AACA,UAAIjB,CAAC,GAAGgB,IAAI,CAACU,GAAL,CAASR,IAAI,CAAC,CAAD,CAAb,EAAkBD,GAAlB,CAAR;AACAM,MAAAA,KAAK,GAAGvC,QAAQ,CAACgD,WAAT,CAAqB,CAAClC,CAAD,EAAIE,CAAJ,CAArB,EAA6B,IAA7B,CAAR;AACD;;AAED,QAAIhB,QAAQ,CAAC6B,IAAT,KAAkB,aAAtB,EAAqC;AACnC,UAAIoB,KAAK,GAAGjD,QAAQ,CAACkD,OAAT,CAAiB,GAAjB,CAAZ;AACA,UAAIC,KAAK,GAAGnD,QAAQ,CAACkD,OAAT,CAAiB,GAAjB,CAAZ;AACA,UAAIpC,CAAC,GAAGkB,IAAI,CAACU,GAAL,CAASR,IAAI,CAAC,CAAD,CAAb,EAAkBD,GAAlB,CAAR;AACA,UAAIjB,CAAC,GAAGgB,IAAI,CAACU,GAAL,CAASR,IAAI,CAAC,CAAD,CAAb,EAAkBD,GAAlB,CAAR;;AAEA,UAAId,WAAW,CAACL,CAAD,CAAf,EAAoB;AAClByB,QAAAA,KAAK,CAAC,CAAD,CAAL,GAAWU,KAAK,CAACG,aAAN,CAAoBH,KAAK,CAACI,SAAN,GAAkBnB,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,GAAmB,CAAnB,GAAuB,CAAzC,CAApB,CAAX;AACD,OAFD,MAEO,IAAIf,WAAW,CAACH,CAAD,CAAf,EAAoB;AACzBuB,QAAAA,KAAK,CAAC,CAAD,CAAL,GAAWY,KAAK,CAACC,aAAN,CAAoBD,KAAK,CAACE,SAAN,GAAkBnB,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,GAAmB,CAAnB,GAAuB,CAAzC,CAApB,CAAX;AACD;AACF,KAtBI,CAsBH;;;AAGF,QAAI,CAACb,KAAK,CAACmB,GAAD,CAAV,EAAiB;AACfD,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAWC,GAAX;AACD;;AAED,QAAI,CAACnB,KAAK,CAACuB,GAAD,CAAV,EAAiB;AACfL,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAWK,GAAX;AACD;AACF;;AAED,SAAOL,KAAP;AACD;;AAED,IAAIe,eAAe,GAAG,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,EAAe,CAAC,IAAD,EAAO,IAAP,CAAf,EAA6B,CAAC,IAAD,EAAO,IAAP,CAA7B,EAA2C,CAAC,IAAD,EAAO,IAAP,CAA3C,CAAtB;AACAzD,UAAU,CAAC0D,MAAX,CAAkB;AAChB1B,EAAAA,IAAI,EAAE,UADU;AAEhB2B,EAAAA,YAAY,EAAE,UAAUC,aAAV,EAAyBC,OAAzB,EAAkCvB,GAAlC,EAAuC;AACnDuB,IAAAA,OAAO,CAACC,UAAR,CAAmB,UAAU5D,WAAV,EAAuB;AACxC,UAAIE,OAAO,GAAGF,WAAW,CAAC0D,aAA1B;;AAEA,UAAIxD,OAAJ,EAAa;AACX,YAAI2D,QAAQ,GAAG3D,OAAO,CAAC4D,OAAR,EAAf;AACAD,QAAAA,QAAQ,CAACE,IAAT,CAAc,UAAU7B,GAAV,EAAe;AAC3B,cAAI8B,MAAM,GAAGzE,MAAM,CAAC0E,GAAP,CAAWV,eAAX,EAA4B,UAAUW,GAAV,EAAe;AACtD,mBAAOlC,uBAAuB,CAAC6B,QAAD,EAAW3B,GAAX,EAAgBgC,GAAhB,EAAqBlE,WAArB,EAAkCoC,GAAlC,CAA9B;AACD,WAFY,CAAb,CAD2B,CAGvB;;AAEJyB,UAAAA,QAAQ,CAACM,aAAT,CAAuBjC,GAAvB,EAA4B8B,MAA5B;AACA,cAAII,EAAE,GAAGP,QAAQ,CAACQ,gBAAT,CAA0BnC,GAA1B,CAAT;AACAkC,UAAAA,EAAE,CAACE,QAAH,CAAY,QAAZ,EAAsBN,MAAtB;AACD,SARD;AASD;AACF,KAfD,EAeG,IAfH;AAgBD,GAnBe;AAoBhBO,EAAAA,YAAY,EAAE,UAAUvE,WAAV,EAAuBE,OAAvB,EAAgCyD,OAAhC,EAAyCvB,GAAzC,EAA8C;AAC1D,QAAInC,QAAQ,GAAGD,WAAW,CAACqC,gBAA3B;AACA,QAAImC,UAAU,GAAGxE,WAAW,CAACyE,IAA7B;AACA,QAAIC,UAAU,GAAG1E,WAAW,CAAC8D,OAAZ,EAAjB;AACA,QAAIa,YAAY,GAAG,KAAKC,cAAxB;AACA,QAAIC,YAAY,GAAGF,YAAY,CAAChC,GAAb,CAAiB6B,UAAjB,KAAgCG,YAAY,CAACG,GAAb,CAAiBN,UAAjB,EAA6B;AAC9EO,MAAAA,KAAK,EAAE,IAAInF,OAAO,CAACoF,KAAZ;AADuE,KAA7B,CAAnD;AAGA,SAAKD,KAAL,CAAWE,GAAX,CAAeJ,YAAY,CAACE,KAA5B;AACAF,IAAAA,YAAY,CAACK,MAAb,GAAsB,IAAtB;AACA,QAAIrB,QAAQ,GAAGsB,UAAU,CAAClF,QAAD,EAAWD,WAAX,EAAwBE,OAAxB,CAAzB,CAV0D,CAUC;;AAE3DA,IAAAA,OAAO,CAACkF,OAAR,CAAgBvB,QAAhB,EAZ0D,CAY/B;;AAE3BA,IAAAA,QAAQ,CAACE,IAAT,CAAc,UAAU7B,GAAV,EAAe;AAC3B;AACA2B,MAAAA,QAAQ,CAACM,aAAT,CAAuBjC,GAAvB,EAA4B3C,MAAM,CAAC0E,GAAP,CAAWV,eAAX,EAA4B,UAAUW,GAAV,EAAe;AACrE,eAAOlC,uBAAuB,CAAC6B,QAAD,EAAW3B,GAAX,EAAgBgC,GAAhB,EAAqBlE,WAArB,EAAkCoC,GAAlC,CAA9B;AACD,OAF2B,CAA5B,EAF2B,CAItB;;AAELyB,MAAAA,QAAQ,CAACwB,aAAT,CAAuBnD,GAAvB,EAA4B;AAC1BoD,QAAAA,KAAK,EAAEZ,UAAU,CAACa,SAAX,CAAqB,OAArB;AADmB,OAA5B;AAGD,KATD;AAUA1B,IAAAA,QAAQ,CAAC2B,IAAT,CAAcX,YAAY,CAACY,MAA3B,EAAmCR,GAAnC,CAAuC,UAAU/C,GAAV,EAAe;AACpD,UAAIwD,OAAO,GAAG,IAAI9F,OAAO,CAAC+F,OAAZ,CAAoB;AAChCC,QAAAA,KAAK,EAAE;AACL5B,UAAAA,MAAM,EAAEH,QAAQ,CAACgC,aAAT,CAAuB3D,GAAvB;AADH;AADyB,OAApB,CAAd;AAKA2B,MAAAA,QAAQ,CAACiC,gBAAT,CAA0B5D,GAA1B,EAA+BwD,OAA/B;AACAb,MAAAA,YAAY,CAACE,KAAb,CAAmBE,GAAnB,CAAuBS,OAAvB;AACD,KARD,EAQGK,MARH,CAQU,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AAClC,UAAIP,OAAO,GAAGb,YAAY,CAACY,MAAb,CAAoBpB,gBAApB,CAAqC4B,MAArC,CAAd;;AAEArG,MAAAA,OAAO,CAACsG,WAAR,CAAoBR,OAApB,EAA6B;AAC3BE,QAAAA,KAAK,EAAE;AACL5B,UAAAA,MAAM,EAAEH,QAAQ,CAACgC,aAAT,CAAuBG,MAAvB;AADH;AADoB,OAA7B,EAIG9F,OAJH,EAIY8F,MAJZ;AAKAnB,MAAAA,YAAY,CAACE,KAAb,CAAmBE,GAAnB,CAAuBS,OAAvB;AACA7B,MAAAA,QAAQ,CAACiC,gBAAT,CAA0BE,MAA1B,EAAkCN,OAAlC;AACD,KAlBD,EAkBGS,MAlBH,CAkBU,UAAUjE,GAAV,EAAe;AACvB,UAAIwD,OAAO,GAAGb,YAAY,CAACY,MAAb,CAAoBpB,gBAApB,CAAqCnC,GAArC,CAAd;;AAEA2C,MAAAA,YAAY,CAACE,KAAb,CAAmBoB,MAAnB,CAA0BT,OAA1B;AACD,KAtBD,EAsBGU,OAtBH;AAuBAvC,IAAAA,QAAQ,CAACwC,iBAAT,CAA2B,UAAUX,OAAV,EAAmBxD,GAAnB,EAAwB;AACjD,UAAII,SAAS,GAAGuB,QAAQ,CAACtB,YAAT,CAAsBL,GAAtB,CAAhB;AACA,UAAIoE,UAAU,GAAGhE,SAAS,CAACiE,QAAV,CAAmB,cAAnB,CAAjB;AACA,UAAIC,eAAe,GAAGlE,SAAS,CAACiE,QAAV,CAAmB,gBAAnB,CAAtB;AACA,UAAIjB,KAAK,GAAGzB,QAAQ,CAAC4C,aAAT,CAAuBvE,GAAvB,EAA4B,OAA5B,CAAZ;AACAwD,MAAAA,OAAO,CAACgB,QAAR,CAAiBnH,MAAM,CAACoH,QAAP,CAAgBrE,SAAS,CAACiE,QAAV,CAAmB,kBAAnB,EAAuCK,YAAvC,EAAhB,EAAuE;AACtFC,QAAAA,IAAI,EAAEpH,SAAS,CAACqH,WAAV,CAAsBxB,KAAtB,EAA6B,GAA7B,CADgF;AAEtFyB,QAAAA,MAAM,EAAEzB;AAF8E,OAAvE,CAAjB;AAIAI,MAAAA,OAAO,CAACsB,UAAR,GAAqB1E,SAAS,CAACiE,QAAV,CAAmB,oBAAnB,EAAyCK,YAAzC,EAArB;AACAhH,MAAAA,OAAO,CAACqH,aAAR,CAAsBvB,OAAO,CAACwB,KAA9B,EAAqCxB,OAAO,CAACsB,UAA7C,EAAyDV,UAAzD,EAAqEE,eAArE,EAAsF;AACpFW,QAAAA,YAAY,EAAEjH,OADsE;AAEpFkH,QAAAA,cAAc,EAAElF,GAFoE;AAGpFmF,QAAAA,WAAW,EAAExD,QAAQ,CAACyD,OAAT,CAAiBpF,GAAjB,KAAyB,EAH8C;AAIpFqF,QAAAA,UAAU,EAAE,IAJwE;AAKpFC,QAAAA,SAAS,EAAElC;AALyE,OAAtF;AAOA1F,MAAAA,OAAO,CAAC6H,aAAR,CAAsB/B,OAAtB,EAA+B,EAA/B;AACAA,MAAAA,OAAO,CAACgC,SAAR,GAAoBxH,OAApB;AACD,KAnBD;AAoBA2E,IAAAA,YAAY,CAACY,MAAb,GAAsB5B,QAAtB;AACAgB,IAAAA,YAAY,CAACE,KAAb,CAAmB4C,MAAnB,GAA4BzH,OAAO,CAACyC,GAAR,CAAY,QAAZ,KAAyB3C,WAAW,CAAC2C,GAAZ,CAAgB,QAAhB,CAArD;AACD;AAzFe,CAAlB;AA2FA;;;;;;;AAOA,SAASwC,UAAT,CAAoBlF,QAApB,EAA8BD,WAA9B,EAA2CE,OAA3C,EAAoD;AAClD,MAAI0H,cAAJ;AACA,MAAI/D,QAAJ;AACA,MAAI1B,IAAI,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAX;;AAEA,MAAIlC,QAAJ,EAAc;AACZ2H,IAAAA,cAAc,GAAGrI,MAAM,CAAC0E,GAAP,CAAWhE,QAAQ,IAAIA,QAAQ,CAAC4H,UAAhC,EAA4C,UAAUC,QAAV,EAAoB;AAC/E,UAAIC,IAAI,GAAG/H,WAAW,CAAC8D,OAAZ,GAAsBkE,gBAAtB,CAAuChI,WAAW,CAACiI,iBAAZ,CAA8BH,QAA9B,EAAwC,CAAxC,CAAvC,KAAsF,EAAjG,CAD+E,CACsB;;AAErGC,MAAAA,IAAI,CAACtD,IAAL,GAAYqD,QAAZ;AACA,aAAOC,IAAP;AACD,KALgB,CAAjB;AAMAlE,IAAAA,QAAQ,GAAG,IAAInE,IAAJ,CAASH,MAAM,CAAC0E,GAAP,CAAW9B,IAAX,EAAiB,UAAU+B,GAAV,EAAehC,GAAf,EAAoB;AACvD,aAAO;AACLuC,QAAAA,IAAI,EAAEP,GADD;AAELpC,QAAAA,IAAI,EAAE8F,cAAc,CAAC1F,GAAG,GAAG,CAAP,CAAd,CAAwBJ;AAFzB,OAAP;AAID,KALmB,CAAT,EAKP5B,OALO,CAAX;AAMD,GAbD,MAaO;AACL0H,IAAAA,cAAc,GAAG,CAAC;AAChBnD,MAAAA,IAAI,EAAE,OADU;AAEhB3C,MAAAA,IAAI,EAAE;AAFU,KAAD,CAAjB;AAIA+B,IAAAA,QAAQ,GAAG,IAAInE,IAAJ,CAASkI,cAAT,EAAyB1H,OAAzB,CAAX;AACD;;AAED,MAAIgI,OAAO,GAAG3I,MAAM,CAAC0E,GAAP,CAAW/D,OAAO,CAACyC,GAAR,CAAY,MAAZ,CAAX,EAAgCpD,MAAM,CAAC4I,KAAP,CAAapI,iBAAb,EAAgCC,WAAhC,EAA6CC,QAA7C,EAAuDC,OAAvD,CAAhC,CAAd;;AAEA,MAAID,QAAJ,EAAc;AACZiI,IAAAA,OAAO,GAAG3I,MAAM,CAAC6I,MAAP,CAAcF,OAAd,EAAuB3I,MAAM,CAAC4I,KAAP,CAAatG,cAAb,EAA6B5B,QAA7B,CAAvB,CAAV;AACD;;AAED,MAAIoI,cAAc,GAAGpI,QAAQ,GAAG,UAAUE,IAAV,EAAgBmI,OAAhB,EAAyBC,SAAzB,EAAoC9G,QAApC,EAA8C;AAC5E,WAAOtB,IAAI,CAACM,KAAL,CAAW+H,IAAI,CAACC,KAAL,CAAWhH,QAAQ,GAAG,CAAtB,CAAX,EAAqCA,QAAQ,GAAG,CAAhD,CAAP;AACD,GAF4B,GAEzB,UAAUtB,IAAV,EAAgB;AAClB,WAAOA,IAAI,CAACuI,KAAZ;AACD,GAJD;AAKA7E,EAAAA,QAAQ,CAAC8E,QAAT,CAAkBT,OAAlB,EAA2B,IAA3B,EAAiCG,cAAjC;AACAxE,EAAAA,QAAQ,CAAC+E,aAAT,GAAyB,IAAzB;AACA,SAAO/E,QAAP;AACD","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y], true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  updateLayout: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle.normal').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}"]},"metadata":{},"sourceType":"script"}