{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/dataZoom/InsideZoomView.js"],"names":["zrUtil","require","DataZoomView","sliderMove","roams","bind","InsideZoomView","extend","type","init","ecModel","api","_range","render","dataZoomModel","payload","superApply","arguments","shouldRecordRange","id","getPercentRange","each","getTargetCoordInfo","coordInfoList","coordSysName","allCoordIds","map","coordInfo","generateCoordId","model","coordModel","dataZoomOption","option","register","coordId","containsPoint","e","x","y","coordinateSystem","containPoint","dataZoomId","throttleRate","get","panGetRange","_onPan","zoomGetRange","_onZoom","zoomLock","disabled","roamControllerOpt","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","dispose","unregister","controller","dx","dy","oldX","oldY","newX","newY","range","slice","axisModel","axisModels","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","scale","mouseX","mouseY","percentPoint","pixelStart","Math","max","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","minSpan","maxSpan","grid","oldPoint","newPoint","axis","ret","rect","getRect","dim","width","inverse","height","polar","radiusExtent","getRadiusAxis","getExtent","angleExtent","getAngleAxis","pointToCoord","mainType","singleAxis","orient","_default","module","exports"],"mappings":"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","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}