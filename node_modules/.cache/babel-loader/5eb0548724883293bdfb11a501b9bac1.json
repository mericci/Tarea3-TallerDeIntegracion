{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/coord/axisDefault.js"],"names":["zrUtil","require","defaultOption","show","zlevel","z","inverse","name","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","silent","triggerEvent","tooltip","axisPointer","axisLine","onZero","onZeroAxisIndex","lineStyle","color","width","type","symbol","symbolSize","axisTick","inside","length","axisLabel","rotate","showMinLabel","showMaxLabel","margin","fontSize","splitLine","splitArea","areaStyle","axisDefault","categoryAxis","merge","boundaryGap","alignWithLabel","interval","valueAxis","splitNumber","timeAxis","defaults","scale","min","max","logAxis","logBase","_default","module","exports"],"mappings":"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","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}