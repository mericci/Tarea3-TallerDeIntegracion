{"ast":null,"code":"var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\"); // command chars\n\n\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/zrender/lib/tool/path.js"],"names":["Path","require","PathProxy","transformPath","cc","mathSqrt","Math","sqrt","mathSin","sin","mathCos","cos","PI","vMag","v","vRatio","u","vAngle","acos","processArc","x1","y1","x2","y2","fa","fs","rx","ry","psiDeg","cmd","path","psi","xp","yp","lambda","f","cxp","cyp","cx","cy","theta","dTheta","addData","createPathProxyFromString","data","cs","replace","n","length","RegExp","arr","split","cpx","cpy","CMD","prevCmd","str","c","charAt","off","p","slice","shift","i","parseFloat","isNaN","ctlPtx","ctlPty","L","M","C","len","pathData","Q","A","Z","toStatic","createPathOptions","opts","pathProxy","buildPath","setData","ctx","getContext","rebuildPath","applyTransform","m","dirty","createFromString","extendFromString","extend","mergePath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","shape","push","pathBundle","appendPath","exports"],"mappings":"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","sourcesContent":["var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;"]},"metadata":{},"sourceType":"script"}