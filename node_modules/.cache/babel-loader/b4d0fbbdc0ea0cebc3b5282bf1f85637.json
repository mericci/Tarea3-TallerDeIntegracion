{"ast":null,"code":"var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/geo.js"],"names":["echarts","require","zrUtil","makeAction","method","actionInfo","update","registerAction","payload","ecModel","selected","eachComponent","mainType","query","geoModel","name","geo","coordinateSystem","each","regions","region","isSelected","type","event"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;;AAEAA,OAAO,CAAC,uBAAD,CAAP;;AAEAA,OAAO,CAAC,yBAAD,CAAP;;AAEAA,OAAO,CAAC,eAAD,CAAP;;AAEAA,OAAO,CAAC,mBAAD,CAAP;;AAEA,SAASE,UAAT,CAAoBC,MAApB,EAA4BC,UAA5B,EAAwC;AACtCA,EAAAA,UAAU,CAACC,MAAX,GAAoB,YAApB;AACAN,EAAAA,OAAO,CAACO,cAAR,CAAuBF,UAAvB,EAAmC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4B;AAC7D,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,OAAO,CAACE,aAAR,CAAsB;AACpBC,MAAAA,QAAQ,EAAE,KADU;AAEpBC,MAAAA,KAAK,EAAEL;AAFa,KAAtB,EAGG,UAAUM,QAAV,EAAoB;AACrBA,MAAAA,QAAQ,CAACV,MAAD,CAAR,CAAiBI,OAAO,CAACO,IAAzB;AACA,UAAIC,GAAG,GAAGF,QAAQ,CAACG,gBAAnB;AACAf,MAAAA,MAAM,CAACgB,IAAP,CAAYF,GAAG,CAACG,OAAhB,EAAyB,UAAUC,MAAV,EAAkB;AACzCV,QAAAA,QAAQ,CAACU,MAAM,CAACL,IAAR,CAAR,GAAwBD,QAAQ,CAACO,UAAT,CAAoBD,MAAM,CAACL,IAA3B,KAAoC,KAA5D;AACD,OAFD;AAGD,KATD;AAUA,WAAO;AACLL,MAAAA,QAAQ,EAAEA,QADL;AAELK,MAAAA,IAAI,EAAEP,OAAO,CAACO;AAFT,KAAP;AAID,GAhBD;AAiBD;;AAEDZ,UAAU,CAAC,gBAAD,EAAmB;AAC3BmB,EAAAA,IAAI,EAAE,iBADqB;AAE3BC,EAAAA,KAAK,EAAE;AAFoB,CAAnB,CAAV;AAIApB,UAAU,CAAC,QAAD,EAAW;AACnBmB,EAAAA,IAAI,EAAE,WADa;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAAX,CAAV;AAIApB,UAAU,CAAC,UAAD,EAAa;AACrBmB,EAAAA,IAAI,EAAE,aADe;AAErBC,EAAAA,KAAK,EAAE;AAFc,CAAb,CAAV","sourcesContent":["var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});"]},"metadata":{},"sourceType":"script"}