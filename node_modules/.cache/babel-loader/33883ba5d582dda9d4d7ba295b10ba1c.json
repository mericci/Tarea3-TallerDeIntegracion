{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype;\n\nproto.render = proto.updateView = proto.updateLayout = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/toolbox/feature/Brush.js"],"names":["zrUtil","require","featureManager","lang","brushLang","toolbox","brush","Brush","model","ecModel","api","_brushType","_brushMode","defaultOption","show","type","icon","rect","polygon","lineX","lineY","keep","clear","title","clone","proto","prototype","render","updateView","updateLayout","featureModel","brushType","brushMode","isBrushed","eachComponent","mainType","brushModel","brushOption","areas","length","each","get","setIconStatus","getIcons","availableIcons","icons","onclick","dispatchAction","intervals","command","key","register","_default","module","exports"],"mappings":"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","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype;\n\nproto.render = proto.updateView = proto.updateLayout = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}