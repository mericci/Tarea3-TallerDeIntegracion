{"ast":null,"code":"var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var sum = data.getSum('value'); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      normal: {\n        show: true,\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    labelLine: {\n      normal: {\n        show: true,\n        length: 20,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      },\n      emphasis: {}\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {// color: 各异,\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/funnel/FunnelSeries.js"],"names":["echarts","require","List","_model","defaultEmphasis","completeDimensions","FunnelSeries","extendSeriesModel","type","init","option","superApply","arguments","legendDataProvider","getRawData","_defaultLabelLine","getInitialData","ecModel","dimensions","data","list","initData","labelLine","labelLineNormalOpt","normal","labelLineEmphasisOpt","emphasis","show","label","getDataParams","dataIndex","getData","params","superCall","sum","getSum","percent","get","toFixed","$vars","push","defaultOption","zlevel","z","legendHoverLink","left","top","right","bottom","minSize","maxSize","sort","gap","funnelAlign","position","length","lineStyle","width","itemStyle","borderColor","borderWidth","_default","module","exports"],"mappings":"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","sourcesContent":["var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var sum = data.getSum('value'); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      normal: {\n        show: true,\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    labelLine: {\n      normal: {\n        show: true,\n        length: 20,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      },\n      emphasis: {}\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {// color: 各异,\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}