{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    label: {\n      normal: {\n        color: '#000'\n      },\n      emphasis: {}\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/timeline/TimelineModel.js"],"names":["zrUtil","require","ComponentModel","List","modelUtil","TimelineModel","extend","type","layoutMode","defaultOption","zlevel","z","show","axisType","realtime","left","top","right","bottom","width","height","padding","controlPosition","autoPlay","rewind","loop","playInterval","currentIndex","itemStyle","normal","emphasis","label","color","data","init","option","parentModel","ecModel","_data","_names","mergeDefaultAndTheme","_initData","mergeOption","superApply","arguments","setCurrentIndex","count","getCurrentIndex","isIndexMax","setPlayState","state","getPlayState","thisOption","dataArr","names","idxArr","each","item","index","value","getDataItemValue","newItem","isObject","clone","push","isString","isNaN","dimType","category","time","name","initData","getData","getCategories","get","slice","_default","module","exports"],"mappings":"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","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    label: {\n      normal: {\n        color: '#000'\n      },\n      emphasis: {}\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}