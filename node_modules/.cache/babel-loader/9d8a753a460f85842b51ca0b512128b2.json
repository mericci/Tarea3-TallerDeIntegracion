{"ast":null,"code":"var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\n\nvar ___ec_export = require(\"./export\");\n\n(function () {\n  for (var key in ___ec_export) {\n    if (___ec_export.hasOwnProperty(key)) {\n      exports[key] = ___ec_export[key];\n    }\n  }\n})();","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/echarts.js"],"names":["_config","require","__DEV__","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","ComponentModel","SeriesModel","ComponentView","ChartView","graphic","modelUtil","_throttle","throttle","seriesColor","loadingDefault","each","parseClassType","version","dependencies","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","HAS_GRADIENT_OR_PATTERN_BG","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","method","eventName","handler","context","toLowerCase","prototype","call","MessageCenter","on","off","one","mixin","ECharts","dom","theme","opts","themeStorage","id","group","_dom","defaultRenderer","zr","_zr","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","bind","flush","clone","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","prioritySortFunc","a","b","prio","visualFuncs","dataProcessorFuncs","animation","_onframe","setAsPrimitive","echartsProto","silent","updateMethods","prepareAndUpdate","flushPendingActions","triggerUpdatedEvent","getDom","getZr","setOption","option","notMerge","lazyUpdate","isObject","_model","optionManager","ecModel","optionPreprocessorFuncs","setTheme","console","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","get","list","storage","getDisplayList","el","stopAnimation","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","mainType","component","view","__viewId","ignore","push","url","getType","toDataURL","type","getConnectedDataURL","groupId","mathMin","Math","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left","top","right","bottom","canvasList","instances","chart","canvas","boundingRect","getBoundingClientRect","targetCanvas","createCanvas","item","img","Image","style","x","y","image","add","refreshImmediately","convertToPixel","curry","doConvertPixel","convertFromPixel","methodName","finder","value","coordSysList","getCoordinateSystems","result","parseFinder","i","length","coordSys","containPixel","models","key","indexOf","model","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","seriesModel","data","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","componentModel","getViewOfSeriesModel","update","payload","api","coordSysMgr","restoreData","create","processData","stackSeriesData","doVisualEncoding","doRender","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","postUpdateFuncs","func","updateView","eachSeries","clearAllVisual","invokeUpdateMethod","updateVisual","updateLayout","doLayout","prepareView","updateDirectly","ecIns","subType","concat","callView","query","condition","index","__alive","__model","optionChanged","resetOption","updateMethod","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","extend","eventActionMap","dispatchAction","opt","actions","doDispatchAction","browser","weChat","payloadType","escapeConnect","actionWrap","actionInfo","cptType","split","pop","payloads","batched","batch","map","defaults","eventObjBatch","isHighDown","batchItem","action","event","main","sub","trigger","pendingActions","shift","updateZ","idx","updateProgressiveAndBlend","updateHoverLayerStatus","isComponent","viewList","viewMap","viewId","classType","Clazz","getClass","__id","__ecComponentInfo","componentIndex","dispose","splice","process","stackedDataMap","series","stack","previousStack","stackedOn","visual","isLayout","excludesLayout","clearColorPalette","componentView","render","chartView","MOUSE_EVENT_NAMES","eveName","e","target","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","actionType","eventType","isDisposed","_disposed","clear","elCount","traverse","isGroup","node","useHoverLayer","frameDrawNum","needProgressive","progressive","floor","blendMode","setStyle","z","zlevel","ecInstance","getComponentByElement","modelInfo","getComponent","parent","idBase","Date","groupIdBase","DOM_ATTRIBUTE_KEY","mapDataStores","enableConnect","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","STATUS_KEY","updateConnectedChartsStatus","charts","status","otherChart","otherCharts","existInstance","getInstanceByDom","setAttribute","connect","isArray","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","registerPostUpdate","postUpdateFunc","registerAction","assert","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","slice","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","$override","registerMap","mapName","geoJson","specialAreas","features","JSON","Function","getMap","noop","dataTool","exports","___ec_export"],"mappings":"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","sourcesContent":["var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();"]},"metadata":{},"sourceType":"script"}