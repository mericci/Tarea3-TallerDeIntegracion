{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam; // FIXME axisType is fixed ?\n\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/coord/axisModelCreator.js"],"names":["zrUtil","require","axisDefault","ComponentModel","_layout","getLayoutParams","mergeLayoutParam","AXIS_TYPES","_default","axisName","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","each","axisType","extend","type","mergeDefaultAndTheme","option","ecModel","layoutMode","inputPositionParams","themeModel","getTheme","merge","get","getDefaultOption","defaultOption","mergeAll","registerSubTypeDefaulter","curry","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIE,cAAc,GAAGF,OAAO,CAAC,oBAAD,CAA5B;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,gBAAD,CAArB;;AAEA,IAAII,eAAe,GAAGD,OAAO,CAACC,eAA9B;AACA,IAAIC,gBAAgB,GAAGF,OAAO,CAACE,gBAA/B,C,CACA;;AACA,IAAIC,UAAU,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,MAAtB,EAA8B,KAA9B,CAAjB;AACA;;;;;;;;AAQA,SAASC,QAAT,CAAkBC,QAAlB,EAA4BC,kBAA5B,EAAgDC,iBAAhD,EAAmEC,kBAAnE,EAAuF;AACrFZ,EAAAA,MAAM,CAACa,IAAP,CAAYN,UAAZ,EAAwB,UAAUO,QAAV,EAAoB;AAC1CJ,IAAAA,kBAAkB,CAACK,MAAnB,CAA0B;AACxBC,MAAAA,IAAI,EAAEP,QAAQ,GAAG,OAAX,GAAqBK,QADH;AAExBG,MAAAA,oBAAoB,EAAE,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AAC/C,YAAIC,UAAU,GAAG,KAAKA,UAAtB;AACA,YAAIC,mBAAmB,GAAGD,UAAU,GAAGf,eAAe,CAACa,MAAD,CAAlB,GAA6B,EAAjE;AACA,YAAII,UAAU,GAAGH,OAAO,CAACI,QAAR,EAAjB;AACAvB,QAAAA,MAAM,CAACwB,KAAP,CAAaN,MAAb,EAAqBI,UAAU,CAACG,GAAX,CAAeX,QAAQ,GAAG,MAA1B,CAArB;AACAd,QAAAA,MAAM,CAACwB,KAAP,CAAaN,MAAb,EAAqB,KAAKQ,gBAAL,EAArB;AACAR,QAAAA,MAAM,CAACF,IAAP,GAAcL,iBAAiB,CAACF,QAAD,EAAWS,MAAX,CAA/B;;AAEA,YAAIE,UAAJ,EAAgB;AACdd,UAAAA,gBAAgB,CAACY,MAAD,EAASG,mBAAT,EAA8BD,UAA9B,CAAhB;AACD;AACF,OAbuB;AAcxBO,MAAAA,aAAa,EAAE3B,MAAM,CAAC4B,QAAP,CAAgB,CAAC,EAAD,EAAK1B,WAAW,CAACY,QAAQ,GAAG,MAAZ,CAAhB,EAAqCF,kBAArC,CAAhB,EAA0E,IAA1E;AAdS,KAA1B;AAgBD,GAjBD;AAkBAT,EAAAA,cAAc,CAAC0B,wBAAf,CAAwCpB,QAAQ,GAAG,MAAnD,EAA2DT,MAAM,CAAC8B,KAAP,CAAanB,iBAAb,EAAgCF,QAAhC,CAA3D;AACD;;AAEDsB,MAAM,CAACC,OAAP,GAAiBxB,QAAjB","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}