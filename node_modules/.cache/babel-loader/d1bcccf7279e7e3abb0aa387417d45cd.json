{"ast":null,"code":"/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/action/roamHelper.js"],"names":["updateCenterAndZoom","view","payload","zoomLimit","previousZoom","getZoom","center","getCenter","zoom","point","dataToPoint","dx","dy","pointToData","setCenter","zoomMin","min","zoomMax","max","Infinity","Math","scale","position","fixX","originX","fixY","originY","updateTransform","setZoom","exports"],"mappings":"AAAA;;;;;AAKA,SAASA,mBAAT,CAA6BC,IAA7B,EAAmCC,OAAnC,EAA4CC,SAA5C,EAAuD;AACrD,MAAIC,YAAY,GAAGH,IAAI,CAACI,OAAL,EAAnB;AACA,MAAIC,MAAM,GAAGL,IAAI,CAACM,SAAL,EAAb;AACA,MAAIC,IAAI,GAAGN,OAAO,CAACM,IAAnB;AACA,MAAIC,KAAK,GAAGR,IAAI,CAACS,WAAL,CAAiBJ,MAAjB,CAAZ;;AAEA,MAAIJ,OAAO,CAACS,EAAR,IAAc,IAAd,IAAsBT,OAAO,CAACU,EAAR,IAAc,IAAxC,EAA8C;AAC5CH,IAAAA,KAAK,CAAC,CAAD,CAAL,IAAYP,OAAO,CAACS,EAApB;AACAF,IAAAA,KAAK,CAAC,CAAD,CAAL,IAAYP,OAAO,CAACU,EAApB;AACA,QAAIN,MAAM,GAAGL,IAAI,CAACY,WAAL,CAAiBJ,KAAjB,CAAb;AACAR,IAAAA,IAAI,CAACa,SAAL,CAAeR,MAAf;AACD;;AAED,MAAIE,IAAI,IAAI,IAAZ,EAAkB;AAChB,QAAIL,SAAJ,EAAe;AACb,UAAIY,OAAO,GAAGZ,SAAS,CAACa,GAAV,IAAiB,CAA/B;AACA,UAAIC,OAAO,GAAGd,SAAS,CAACe,GAAV,IAAiBC,QAA/B;AACAX,MAAAA,IAAI,GAAGY,IAAI,CAACF,GAAL,CAASE,IAAI,CAACJ,GAAL,CAASZ,YAAY,GAAGI,IAAxB,EAA8BS,OAA9B,CAAT,EAAiDF,OAAjD,IAA4DX,YAAnE;AACD,KALe,CAKd;;;AAGFH,IAAAA,IAAI,CAACoB,KAAL,CAAW,CAAX,KAAiBb,IAAjB;AACAP,IAAAA,IAAI,CAACoB,KAAL,CAAW,CAAX,KAAiBb,IAAjB;AACA,QAAIc,QAAQ,GAAGrB,IAAI,CAACqB,QAApB;AACA,QAAIC,IAAI,GAAG,CAACrB,OAAO,CAACsB,OAAR,GAAkBF,QAAQ,CAAC,CAAD,CAA3B,KAAmCd,IAAI,GAAG,CAA1C,CAAX;AACA,QAAIiB,IAAI,GAAG,CAACvB,OAAO,CAACwB,OAAR,GAAkBJ,QAAQ,CAAC,CAAD,CAA3B,KAAmCd,IAAI,GAAG,CAA1C,CAAX;AACAc,IAAAA,QAAQ,CAAC,CAAD,CAAR,IAAeC,IAAf;AACAD,IAAAA,QAAQ,CAAC,CAAD,CAAR,IAAeG,IAAf;AACAxB,IAAAA,IAAI,CAAC0B,eAAL,GAfgB,CAeQ;;AAExB,QAAIrB,MAAM,GAAGL,IAAI,CAACY,WAAL,CAAiBJ,KAAjB,CAAb;AACAR,IAAAA,IAAI,CAACa,SAAL,CAAeR,MAAf;AACAL,IAAAA,IAAI,CAAC2B,OAAL,CAAapB,IAAI,GAAGJ,YAApB;AACD;;AAED,SAAO;AACLE,IAAAA,MAAM,EAAEL,IAAI,CAACM,SAAL,EADH;AAELC,IAAAA,IAAI,EAAEP,IAAI,CAACI,OAAL;AAFD,GAAP;AAID;;AAEDwB,OAAO,CAAC7B,mBAAR,GAA8BA,mBAA9B","sourcesContent":["/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;"]},"metadata":{},"sourceType":"script"}