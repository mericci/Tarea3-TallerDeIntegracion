{"ast":null,"code":"var echarts = require(\"../../echarts\");\n\nvar helper = require(\"./helper\");\n/**\n * @file Treemap action\n */\n\n\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/treemap/treemapAction.js"],"names":["echarts","require","helper","noop","actionTypes","i","length","registerAction","type","update","payload","ecModel","eachComponent","mainType","subType","query","handleRootToNode","model","index","targetInfo","retrieveTargetInfo","originViewRoot","getViewRoot","direction","aboveViewRoot","node","resetViewRoot"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;AAEA;;;;;AAGA,IAAIE,IAAI,GAAG,YAAY,CAAE,CAAzB;;AAEA,IAAIC,WAAW,GAAG,CAAC,mBAAD,EAAsB,eAAtB,EAAuC,aAAvC,CAAlB;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACE,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CL,EAAAA,OAAO,CAACO,cAAR,CAAuB;AACrBC,IAAAA,IAAI,EAAEJ,WAAW,CAACC,CAAD,CADI;AAErBI,IAAAA,MAAM,EAAE;AAFa,GAAvB,EAGGN,IAHH;AAID;;AAEDH,OAAO,CAACO,cAAR,CAAuB;AACrBC,EAAAA,IAAI,EAAE,mBADe;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB,EAGG,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AAC7BA,EAAAA,OAAO,CAACC,aAAR,CAAsB;AACpBC,IAAAA,QAAQ,EAAE,QADU;AAEpBC,IAAAA,OAAO,EAAE,SAFW;AAGpBC,IAAAA,KAAK,EAAEL;AAHa,GAAtB,EAIGM,gBAJH;;AAMA,WAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAwC;AACtC,QAAIC,UAAU,GAAGjB,MAAM,CAACkB,kBAAP,CAA0BV,OAA1B,EAAmCO,KAAnC,CAAjB;;AAEA,QAAIE,UAAJ,EAAgB;AACd,UAAIE,cAAc,GAAGJ,KAAK,CAACK,WAAN,EAArB;;AAEA,UAAID,cAAJ,EAAoB;AAClBX,QAAAA,OAAO,CAACa,SAAR,GAAoBrB,MAAM,CAACsB,aAAP,CAAqBH,cAArB,EAAqCF,UAAU,CAACM,IAAhD,IAAwD,QAAxD,GAAmE,WAAvF;AACD;;AAEDR,MAAAA,KAAK,CAACS,aAAN,CAAoBP,UAAU,CAACM,IAA/B;AACD;AACF;AACF,CAvBD","sourcesContent":["var echarts = require(\"../../echarts\");\n\nvar helper = require(\"./helper\");\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});"]},"metadata":{},"sourceType":"script"}