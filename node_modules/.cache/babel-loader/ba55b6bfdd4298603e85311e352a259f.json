{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    }, true);\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/candlestick/candlestickLayout.js"],"names":["zrUtil","require","_number","parsePercent","_graphic","subPixelOptimize","retrieve2","_default","ecModel","eachSeriesByType","seriesModel","coordSys","coordinateSystem","data","getData","candleWidth","calculateCandleWidth","chartLayout","get","variableDim","constDim","coordDims","vDims","cDim","each","dimensions","dimName","dimInfo","getDimensionInfo","coordDim","push","length","dataIndex","concat","args","arguments","axisDimVal","idx","openVal","closeVal","lowestVal","highestVal","ocLow","Math","min","ocHigh","max","ocLowPoint","getPoint","ocHighPoint","lowestPoint","highestPoint","whiskerEnds","subPixelOptimizePoint","bodyEnds","addBodyEnd","sign","getItemModel","setItemLayout","initBaseline","brushRect","makeBrushRect","val","p","isNaN","NaN","dataToPoint","point","start","point1","slice","point2","pmin","pmax","x","y","width","height","baseAxis","getBaseAxis","extent","bandWidth","type","getBandWidth","getExtent","abs","count","barMaxWidth","barMinWidth","barWidth","module","exports"],"mappings":"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","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    }, true);\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}