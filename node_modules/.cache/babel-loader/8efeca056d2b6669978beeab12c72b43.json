{"ast":null,"code":"var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\n\n\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/zrender/lib/svg/helper/GradientManager.js"],"names":["Definable","require","zrUtil","zrLog","GradientManager","svgRoot","call","inherits","prototype","addWithoutUpdate","svgElement","displayable","style","that","each","fillOrStroke","type","gradient","defs","getDefs","dom","_dom","contains","addDom","add","markUsed","id","getAttribute","setAttribute","createElement","nextId","updateDom","update","tagName","removeDom","x","y","x2","y2","r","global","innerHTML","colors","colorStops","i","len","length","stop","offset","color","appendChild","fill","stroke","_default","module","exports"],"mappings":"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","sourcesContent":["var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}