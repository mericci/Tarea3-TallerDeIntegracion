{"ast":null,"code":"var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol; // TODO Batch by color\n\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null,\n    sizes: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var sizes = shape.sizes;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (isNaN(pt[0]) || isNaN(pt[1])) {\n        continue;\n      }\n\n      var size = sizes[i];\n\n      if (size[0] < 4) {\n        // Optimize for small symbol\n        path.rect(pt[0] - size[0] / 2, pt[1] - size[1] / 2, size[0], size[1]);\n      } else {\n        symbolProxyShape.x = pt[0] - size[0] / 2;\n        symbolProxyShape.y = pt[1] - size[1] / 2;\n        symbolProxyShape.width = size[0];\n        symbolProxyShape.height = size[1];\n        symbolProxy.buildPath(path, symbolProxyShape, true);\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var points = shape.points;\n    var sizes = shape.sizes; // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var i = points.length - 1; i >= 0; i--) {\n      var pt = points[i];\n      var size = sizes[i];\n      var x0 = pt[0] - size[0] / 2;\n      var y0 = pt[1] - size[1] / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + size[0] && y <= y0 + size[1]) {\n        // i is dataIndex\n        return i;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n  this._symbolEl = new LargeSymbolPath({// rectHover: true,\n    // cursor: 'default'\n  });\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = this._symbolEl;\n  var seriesModel = data.hostModel;\n  symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout),\n    sizes: data.mapArray(function (idx) {\n      var size = data.getItemVisual(idx, 'symbolSize');\n\n      if (!(size instanceof Array)) {\n        size = [size, size];\n      }\n\n      return size;\n    })\n  }); // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  symbolEl.useStyle(seriesModel.getModel('itemStyle.normal').getItemStyle(['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  } // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n\n  symbolEl.seriesIndex = seriesModel.seriesIndex;\n  symbolEl.on('mousemove', function (e) {\n    symbolEl.dataIndex = null;\n    var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex >= 0) {\n      // Provide dataIndex for tooltip\n      symbolEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(symbolEl);\n};\n\nlargeSymbolProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeSymbolProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js"],"names":["graphic","require","_symbol","createSymbol","LargeSymbolPath","extendShape","shape","points","sizes","symbolProxy","buildPath","path","symbolProxyShape","i","length","pt","isNaN","size","rect","x","y","width","height","findDataIndex","x0","y0","LargeSymbolDraw","group","Group","_symbolEl","largeSymbolProto","prototype","updateData","data","removeAll","symbolEl","seriesModel","hostModel","setShape","mapArray","getItemLayout","idx","getItemVisual","Array","getVisual","setColor","useStyle","getModel","getItemStyle","visualColor","seriesIndex","on","e","dataIndex","offsetX","offsetY","add","updateLayout","getData","remove","_default","module","exports"],"mappings":"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","sourcesContent":["var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n// TODO Batch by color\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null,\n    sizes: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var sizes = shape.sizes;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (isNaN(pt[0]) || isNaN(pt[1])) {\n        continue;\n      }\n\n      var size = sizes[i];\n\n      if (size[0] < 4) {\n        // Optimize for small symbol\n        path.rect(pt[0] - size[0] / 2, pt[1] - size[1] / 2, size[0], size[1]);\n      } else {\n        symbolProxyShape.x = pt[0] - size[0] / 2;\n        symbolProxyShape.y = pt[1] - size[1] / 2;\n        symbolProxyShape.width = size[0];\n        symbolProxyShape.height = size[1];\n        symbolProxy.buildPath(path, symbolProxyShape, true);\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var points = shape.points;\n    var sizes = shape.sizes; // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var i = points.length - 1; i >= 0; i--) {\n      var pt = points[i];\n      var size = sizes[i];\n      var x0 = pt[0] - size[0] / 2;\n      var y0 = pt[1] - size[1] / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + size[0] && y <= y0 + size[1]) {\n        // i is dataIndex\n        return i;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n  this._symbolEl = new LargeSymbolPath({// rectHover: true,\n    // cursor: 'default'\n  });\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = this._symbolEl;\n  var seriesModel = data.hostModel;\n  symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout),\n    sizes: data.mapArray(function (idx) {\n      var size = data.getItemVisual(idx, 'symbolSize');\n\n      if (!(size instanceof Array)) {\n        size = [size, size];\n      }\n\n      return size;\n    })\n  }); // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  symbolEl.useStyle(seriesModel.getModel('itemStyle.normal').getItemStyle(['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  } // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n\n  symbolEl.seriesIndex = seriesModel.seriesIndex;\n  symbolEl.on('mousemove', function (e) {\n    symbolEl.dataIndex = null;\n    var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex >= 0) {\n      // Provide dataIndex for tooltip\n      symbolEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(symbolEl);\n};\n\nlargeSymbolProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeSymbolProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}