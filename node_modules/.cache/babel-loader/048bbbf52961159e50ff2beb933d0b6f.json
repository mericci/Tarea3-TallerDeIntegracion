{"ast":null,"code":"var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/model/mixin/colorPalette.js"],"names":["_clazz","require","set","get","_default","clearColorPalette","getColorFromPalette","name","scope","colorIdx","colorNameMap","hasOwnProperty","colorPalette","length","color","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AAEA,IAAIC,GAAG,GAAGF,MAAM,CAACE,GAAjB;AACA,IAAIC,GAAG,GAAGH,MAAM,CAACG,GAAjB;AACA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,iBAAiB,EAAE,YAAY;AAC7BH,IAAAA,GAAG,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAAH;AACAA,IAAAA,GAAG,CAAC,IAAD,EAAO,cAAP,EAAuB,EAAvB,CAAH;AACD,GAJY;AAKbI,EAAAA,mBAAmB,EAAE,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AAC1CA,IAAAA,KAAK,GAAGA,KAAK,IAAI,IAAjB;AACA,QAAIC,QAAQ,GAAGN,GAAG,CAACK,KAAD,EAAQ,UAAR,CAAH,IAA0B,CAAzC;AACA,QAAIE,YAAY,GAAGP,GAAG,CAACK,KAAD,EAAQ,cAAR,CAAH,IAA8BN,GAAG,CAACM,KAAD,EAAQ,cAAR,EAAwB,EAAxB,CAApD,CAH0C,CAGuC;;AAEjF,QAAIE,YAAY,CAACC,cAAb,CAA4BJ,IAA5B,CAAJ,EAAuC;AACrC,aAAOG,YAAY,CAACH,IAAD,CAAnB;AACD;;AAED,QAAIK,YAAY,GAAG,KAAKT,GAAL,CAAS,OAAT,EAAkB,IAAlB,KAA2B,EAA9C;;AAEA,QAAI,CAACS,YAAY,CAACC,MAAlB,EAA0B;AACxB;AACD;;AAED,QAAIC,KAAK,GAAGF,YAAY,CAACH,QAAD,CAAxB;;AAEA,QAAIF,IAAJ,EAAU;AACRG,MAAAA,YAAY,CAACH,IAAD,CAAZ,GAAqBO,KAArB;AACD;;AAEDZ,IAAAA,GAAG,CAACM,KAAD,EAAQ,UAAR,EAAoB,CAACC,QAAQ,GAAG,CAAZ,IAAiBG,YAAY,CAACC,MAAlD,CAAH;AACA,WAAOC,KAAP;AACD;AA5BY,CAAf;AA8BAC,MAAM,CAACC,OAAP,GAAiBZ,QAAjB","sourcesContent":["var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}