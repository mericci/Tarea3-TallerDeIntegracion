{"ast":null,"code":"var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/legend/LegendView.js"],"names":["_config","require","__DEV__","echarts","zrUtil","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","each","Group","_default","extendComponentView","type","newlineDisabled","init","group","add","_contentGroup","_backgroundEl","getContentGroup","render","legendModel","ecModel","api","resetInner","get","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","width","getWidth","height","getHeight","padding","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","getData","itemModel","dataIndex","name","newline","seriesModel","getSeriesByName","data","color","getVisual","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","set","eachRawSeries","legendDataProvider","idx","indexOfName","getItemVisual","itemWidth","itemHeight","inactiveColor","isSelected","textStyleModel","getModel","itemIcon","tooltipModel","legendGlobalTooltipModel","parentModel","size","textX","textAlign","formatter","content","replace","Text","style","setTextStyle","text","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","tooltip","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","option","eachChild","child","silent","setHoverStyle","__legendDataIndex","box","contentRect","dispatchAction","dataName","el","getZr","storage","getDisplayList","useHoverLayer","seriesName","module","exports"],"mappings":"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","sourcesContent":["var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}