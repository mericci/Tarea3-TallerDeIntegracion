{"ast":null,"code":"var _jsxFileName = \"/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/src/components/ExchangeDetail.jsx\";\nimport React, { Component } from 'react';\nimport TickerDetail from './TickerDetail';\n\nclass ExchangeDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buy_volume: 0,\n      sell_volume: 0,\n      total_volume: 0,\n      actions_count: 0,\n      participation: 0\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(this.props.exchange.buy_volume, prevProps.exchange.buy_volume);\n    this.setState({\n      actions_count: this.props.exchange.stocks.length\n    });\n\n    if (this.props.exchange.buy_volume !== prevProps.exchange.buy_volume) {\n      this.setState({\n        buy_volume: this.props.exchange.buy_volume,\n        //sell_volume: this.props.exchange.sell_volume,\n        total_volume: this.props.exchange.buy_volume + this.state.total_volume,\n        //actions_count: this.props.exchange.stocks.length,\n        participation: Math.round(this.state.total_volume / this.props.total_volume * 10000) / 100\n      });\n    }\n\n    if (this.props.exchange.sell_volume !== prevProps.exchange.ell_volume) {\n      this.setState({\n        sell_volume: this.props.exchange.sell_volume,\n        //sell_volume: this.props.exchange.sell_volume,\n        total_volume: this.props.exchange.sell_volume + this.state.total_volume,\n        //actions_count: this.props.exchange.stocks.length,\n        participation: Math.round(this.state.total_volume / this.props.total_volume * 10000) / 100\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, this.props.exchange.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"exchange_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Volumen de compra\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"Volumen de venta\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, \"Volumen total\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, \"Cantidad de acciones\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"Participaci\\xF3n de mercado\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, this.state.buy_volume), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, this.state.sell_volume), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, this.state.total_volume), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, this.state.actions_count), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, this.state.participation, \"%\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, this.props.exchange.stocks.map(company => {\n      return /*#__PURE__*/React.createElement(TickerDetail, {\n        key: company.company,\n        ticker: company,\n        prueba: this.props.prueba,\n        big: this.props.bigs[company.ticker],\n        small: this.props.smalls[company.ticker],\n        last: this.props.lasts[company.ticker],\n        volume: this.props.volume[company.ticker] // buy_change = {this.props.buy_change}\n        // sell_change = {this.props.sell_change}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      });\n    })));\n  }\n\n}\n\nexport default ExchangeDetail;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/src/components/ExchangeDetail.jsx"],"names":["React","Component","TickerDetail","ExchangeDetail","constructor","props","state","buy_volume","sell_volume","total_volume","actions_count","participation","componentDidUpdate","prevProps","console","log","exchange","setState","stocks","length","Math","round","ell_volume","render","name","map","company","prueba","bigs","ticker","smalls","lasts","volume"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TickerDetail from './TickerDetail';\n\n\nclass ExchangeDetail extends Component {\n    constructor(props){\n        super(props);\n    \n        this.state = {\n            buy_volume: 0,\n            sell_volume: 0,\n            total_volume: 0,\n            actions_count: 0,\n            participation: 0\n        };    \n    }\n    \n\n    componentDidUpdate(prevProps){\n        console.log(this.props.exchange.buy_volume, prevProps.exchange.buy_volume)\n        this.setState({actions_count: this.props.exchange.stocks.length})\n        if (this.props.exchange.buy_volume !== prevProps.exchange.buy_volume) {\n            this.setState({\n                buy_volume: this.props.exchange.buy_volume,\n                //sell_volume: this.props.exchange.sell_volume,\n                total_volume: this.props.exchange.buy_volume + this.state.total_volume,\n                //actions_count: this.props.exchange.stocks.length,\n                participation: Math.round((this.state.total_volume/this.props.total_volume)*10000)/100\n            })\n           \n        }\n        if (this.props.exchange.sell_volume !== prevProps.exchange.ell_volume) {\n            this.setState({\n                sell_volume: this.props.exchange.sell_volume,\n                //sell_volume: this.props.exchange.sell_volume,\n                total_volume: this.props.exchange.sell_volume + this.state.total_volume,\n                //actions_count: this.props.exchange.stocks.length,\n                participation: Math.round((this.state.total_volume/this.props.total_volume)*10000)/100\n            })\n        }\n\n    }\n    \n    render(){\n        return (\n            <div className=\"col-md-12\">\n                <h1>{this.props.exchange.name}</h1>\n                <div className=\"exchange_info\">\n                    <table>\n                        <tr>\n                            <th>Volumen de compra</th>\n                            <th>Volumen de venta</th>\n                            <th>Volumen total</th>\n                            <th>Cantidad de acciones</th>\n                            <th>Participación de mercado</th>\n    \n                        </tr>\n                        <tr>\n                            <th>{this.state.buy_volume}</th>\n                            <th>{this.state.sell_volume}</th>\n                            <th>{this.state.total_volume}</th>\n                            <th>{this.state.actions_count}</th>\n                            <th>{this.state.participation}%</th>\n    \n                        </tr>\n                    </table>\n                    \n                </div>\n                <div>\n                    {this.props.exchange.stocks.map(company => {\n                        return(\n                            <TickerDetail\n                                key = {company.company}\n                                ticker = {company}\n                                prueba = {this.props.prueba}\n                                big = {this.props.bigs[company.ticker]}\n                                small = {this.props.smalls[company.ticker]}\n                                last = {this.props.lasts[company.ticker]}\n                                volume = {this.props.volume[company.ticker]}\n                                // buy_change = {this.props.buy_change}\n                                // sell_change = {this.props.sell_change}\n                            /> \n                        )\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExchangeDetail;"]},"metadata":{},"sourceType":"module"}