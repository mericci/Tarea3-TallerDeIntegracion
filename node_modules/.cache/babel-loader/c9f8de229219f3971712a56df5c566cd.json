{"ast":null,"code":"var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\n\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/zrender/lib/graphic/Text.js"],"names":["Displayable","require","zrUtil","textContain","textHelper","Text","opts","call","prototype","constructor","type","brush","ctx","prevEl","style","__dirty","normalizeTextStyle","fill","stroke","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","text","bind","needDrawText","setTransform","renderText","restoreTransform","getBoundingRect","_rect","rect","font","textAlign","textVerticalAlign","textPadding","rich","x","y","getStroke","textStroke","textStrokeWidth","w","width","height","inherits","_default","module","exports"],"mappings":"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","sourcesContent":["var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}