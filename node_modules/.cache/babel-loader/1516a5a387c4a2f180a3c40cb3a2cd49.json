{"ast":null,"code":"var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/graph/graphAction.js"],"names":["echarts","require","_roamHelper","updateCenterAndZoom","actionInfo","type","event","update","registerAction","payload","ecModel","eachComponent","mainType","query","seriesModel","coordSys","coordinateSystem","res","setCenter","center","setZoom","zoom"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAArB;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,yBAAD,CAAzB;;AAEA,IAAIE,mBAAmB,GAAGD,WAAW,CAACC,mBAAtC;AACA,IAAIC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE,WADS;AAEfC,EAAAA,KAAK,EAAE,WAFQ;AAGfC,EAAAA,MAAM,EAAE;AAHO,CAAjB;AAKA;;;;;;;;;;AAUAP,OAAO,CAACQ,cAAR,CAAuBJ,UAAvB,EAAmC,UAAUK,OAAV,EAAmBC,OAAnB,EAA4B;AAC7DA,EAAAA,OAAO,CAACC,aAAR,CAAsB;AACpBC,IAAAA,QAAQ,EAAE,QADU;AAEpBC,IAAAA,KAAK,EAAEJ;AAFa,GAAtB,EAGG,UAAUK,WAAV,EAAuB;AACxB,QAAIC,QAAQ,GAAGD,WAAW,CAACE,gBAA3B;AACA,QAAIC,GAAG,GAAGd,mBAAmB,CAACY,QAAD,EAAWN,OAAX,CAA7B;AACAK,IAAAA,WAAW,CAACI,SAAZ,IAAyBJ,WAAW,CAACI,SAAZ,CAAsBD,GAAG,CAACE,MAA1B,CAAzB;AACAL,IAAAA,WAAW,CAACM,OAAZ,IAAuBN,WAAW,CAACM,OAAZ,CAAoBH,GAAG,CAACI,IAAxB,CAAvB;AACD,GARD;AASD,CAVD;AAWA;;;;;;;;AAQArB,OAAO,CAACQ,cAAR,CAAuB;AACrBH,EAAAA,IAAI,EAAE,oBADe;AAErBC,EAAAA,KAAK,EAAE,oBAFc;AAGrBC,EAAAA,MAAM,EAAE;AAHa,CAAvB,EAIG,YAAY,CAAE,CAJjB;AAKA;;;;;;;AAOAP,OAAO,CAACQ,cAAR,CAAuB;AACrBH,EAAAA,IAAI,EAAE,sBADe;AAErBC,EAAAA,KAAK,EAAE,sBAFc;AAGrBC,EAAAA,MAAM,EAAE;AAHa,CAAvB,EAIG,YAAY,CAAE,CAJjB","sourcesContent":["var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});"]},"metadata":{},"sourceType":"script"}