{"ast":null,"code":"var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/zrender/lib/svg/Painter.js"],"names":["_core","require","createElement","util","each","zrLog","Path","ZImage","ZText","arrayDiff","GradientManager","ClippathManager","_graphic","svgPath","path","svgImage","image","svgText","text","parseInt10","val","parseInt","getSvgProxy","el","checkParentAvailable","parent","child","parentNode","insertAfter","prevSibling","nextSibling","insertBefore","appendChild","prepend","firstChild","append","remove","removeChild","getTextSvgElement","displayable","__textSvgEl","getSvgElement","__svgEl","SVGPainter","root","storage","opts","_opts","extend","svgRoot","setAttribute","style","cssText","gradientManager","clipPathManager","viewport","document","_svgRoot","_viewport","resize","width","height","_visibleList","prototype","constructor","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","list","getDisplayList","_paintList","markAllUnused","visibleList","listLen","length","newVisibleList","i","svgProxy","invisible","__dirty","brush","update","fill","stroke","push","diff","prevSvgElement","item","removed","k","count","indices","svgElement","textSvgElement","added","addWithoutUpdate","markUsed","removeUnused","_getDefs","isForceCreating","defs","getElementsByTagName","contains","children","display","_getSize","_width","_height","viewportStyle","getWidth","getHeight","whIdx","wh","cwh","plt","prb","parseFloat","stl","defaultView","getComputedStyle","dispose","innerHTML","clear","pathToSvg","html","outerHTML","unescape","createMethodNotSupport","method","name","_default","module","exports"],"mappings":"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","sourcesContent":["var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}