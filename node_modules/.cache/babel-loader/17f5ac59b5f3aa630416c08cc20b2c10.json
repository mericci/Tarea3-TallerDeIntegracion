{"ast":null,"code":"var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/dataZoom/DataZoomModel.js"],"names":["_config","require","__DEV__","echarts","zrUtil","env","modelUtil","helper","AxisProxy","each","eachAxisDim","DataZoomModel","extendComponentModel","type","dependencies","defaultOption","zlevel","z","orient","xAxisIndex","yAxisIndex","filterMode","throttle","start","end","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","init","option","parentModel","ecModel","_dataIntervalByAxis","_dataInfo","_axisProxies","textStyleModel","_autoThrottle","_rangePropMode","rawOption","retrieveRaw","mergeDefaultAndTheme","doInit","mergeOption","newOption","merge","thisOption","canvasSupported","realtime","_setDefaultThrottle","updateRangeUse","names","index","getModel","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","dataZoomModel","axisModel","dependentModels","axis","axisProxy","__dzAxisProxy","name","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","get","dimName","length","singleAxis","singleAxisModel","singleAxisIndex","componentIndex","axisIndices","axisModels","i","len","push","eachSeries","seriesModel","_isSeriesHasAllAxesTypeOf","axisId","queryComponents","mainType","id","indexOf","dim","axisType","is","seriesAxisIndex","hasOwnProperty","globalOption","animation","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","callback","context","call","getAxisProxy","getAxisModel","setRawRange","opt","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","key","hostedBy","getRangePropMode","slice","ret","rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","_default","module","exports"],"mappings":"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","sourcesContent":["var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}