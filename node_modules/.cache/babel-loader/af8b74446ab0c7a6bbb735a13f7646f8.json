{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/coord/parallel/parallelPreprocessor.js"],"names":["zrUtil","require","modelUtil","_default","option","createParallelIfNeeded","mergeAxisOptionFromParallel","parallel","hasParallelSeries","each","series","seriesOpt","type","axes","normalizeToArray","parallelAxis","axisOption","isObject","parallelIndex","parallelOption","parallelAxisDefault","merge","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAvB;;AAEA,SAASE,QAAT,CAAkBC,MAAlB,EAA0B;AACxBC,EAAAA,sBAAsB,CAACD,MAAD,CAAtB;AACAE,EAAAA,2BAA2B,CAACF,MAAD,CAA3B;AACD;AACD;;;;;;AAMA,SAASC,sBAAT,CAAgCD,MAAhC,EAAwC;AACtC,MAAIA,MAAM,CAACG,QAAX,EAAqB;AACnB;AACD;;AAED,MAAIC,iBAAiB,GAAG,KAAxB;AACAR,EAAAA,MAAM,CAACS,IAAP,CAAYL,MAAM,CAACM,MAAnB,EAA2B,UAAUC,SAAV,EAAqB;AAC9C,QAAIA,SAAS,IAAIA,SAAS,CAACC,IAAV,KAAmB,UAApC,EAAgD;AAC9CJ,MAAAA,iBAAiB,GAAG,IAApB;AACD;AACF,GAJD;;AAMA,MAAIA,iBAAJ,EAAuB;AACrBJ,IAAAA,MAAM,CAACG,QAAP,GAAkB,CAAC,EAAD,CAAlB;AACD;AACF;AACD;;;;;;AAMA,SAASD,2BAAT,CAAqCF,MAArC,EAA6C;AAC3C,MAAIS,IAAI,GAAGX,SAAS,CAACY,gBAAV,CAA2BV,MAAM,CAACW,YAAlC,CAAX;AACAf,EAAAA,MAAM,CAACS,IAAP,CAAYI,IAAZ,EAAkB,UAAUG,UAAV,EAAsB;AACtC,QAAI,CAAChB,MAAM,CAACiB,QAAP,CAAgBD,UAAhB,CAAL,EAAkC;AAChC;AACD;;AAED,QAAIE,aAAa,GAAGF,UAAU,CAACE,aAAX,IAA4B,CAAhD;AACA,QAAIC,cAAc,GAAGjB,SAAS,CAACY,gBAAV,CAA2BV,MAAM,CAACG,QAAlC,EAA4CW,aAA5C,CAArB;;AAEA,QAAIC,cAAc,IAAIA,cAAc,CAACC,mBAArC,EAA0D;AACxDpB,MAAAA,MAAM,CAACqB,KAAP,CAAaL,UAAb,EAAyBG,cAAc,CAACC,mBAAxC,EAA6D,KAA7D;AACD;AACF,GAXD;AAYD;;AAEDE,MAAM,CAACC,OAAP,GAAiBpB,QAAjB","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}