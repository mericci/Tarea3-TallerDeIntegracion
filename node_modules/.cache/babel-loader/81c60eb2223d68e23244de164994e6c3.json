{"ast":null,"code":"var _jsxFileName = \"/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/src/components/Chart.jsx\";\nimport React from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nconst Chart = props => {\n  console.log(props);\n  var chartOptions = {\n    title: {\n      text: props.title,\n      textStyle: {\n        color: '#FFF'\n      }\n    },\n    tooltip: {\n      trigger: 'axis',\n      formatter: function (params) {\n        params = params[0];\n        var date = new Date(params.name);\n        return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\n      },\n      axisPointer: {\n        animation: false\n      }\n    },\n    xAxis: {\n      type: 'time',\n      splitLine: {\n        show: false\n      },\n      nameTextStyle: {}\n    },\n    yAxis: {\n      type: 'value',\n      boundaryGap: [0, '100%'],\n      splitLine: {\n        show: false\n      }\n    },\n    series: [{\n      name: '模拟数据',\n      type: 'line',\n      showSymbol: false,\n      hoverAnimation: false,\n      data: props.data\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactEcharts, {\n    option: chartOptions,\n    style: {\n      height: 360\n    },\n    opts: {\n      renderer: 'svg'\n    },\n    onChartReady: () => {\n      [chartOptions.series[0].data] = props.data;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/src/components/Chart.jsx"],"names":["React","ReactEcharts","Chart","props","console","log","chartOptions","title","text","textStyle","color","tooltip","trigger","formatter","params","date","Date","name","getDate","getMonth","getFullYear","value","axisPointer","animation","xAxis","type","splitLine","show","nameTextStyle","yAxis","boundaryGap","series","showSymbol","hoverAnimation","data","height","renderer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,YAAY,GAAG;AACfC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAEL,KAAK,CAACI,KADT;AAEHE,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE;AADA;AAFR,KADQ;AAOfC,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,SAAS,EAAE,UAAUC,MAAV,EAAkB;AACzBA,QAAAA,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAf;AACA,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,MAAM,CAACG,IAAhB,CAAX;AACA,eAAOF,IAAI,CAACG,OAAL,KAAiB,GAAjB,IAAwBH,IAAI,CAACI,QAAL,KAAkB,CAA1C,IAA+C,GAA/C,GAAqDJ,IAAI,CAACK,WAAL,EAArD,GAA0E,KAA1E,GAAkFN,MAAM,CAACO,KAAP,CAAa,CAAb,CAAzF;AACH,OANI;AAOLC,MAAAA,WAAW,EAAE;AACTC,QAAAA,SAAS,EAAE;AADF;AAPR,KAPM;AAkBfC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE,MADH;AAEHC,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC,OAFR;AAKHC,MAAAA,aAAa,EAAE;AALZ,KAlBQ;AA2BfC,IAAAA,KAAK,EAAE;AACHJ,MAAAA,IAAI,EAAE,OADH;AAEHK,MAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,MAAJ,CAFV;AAGHJ,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC;AAHR,KA3BQ;AAkCfI,IAAAA,MAAM,EAAE,CAAC;AACLd,MAAAA,IAAI,EAAE,MADD;AAELQ,MAAAA,IAAI,EAAE,MAFD;AAGLO,MAAAA,UAAU,EAAE,KAHP;AAILC,MAAAA,cAAc,EAAE,KAJX;AAKLC,MAAAA,IAAI,EAAE/B,KAAK,CAAC+B;AALP,KAAD;AAlCO,GAAnB;AA6CA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,MAAM,EAAE5B,YADZ;AAEI,IAAA,KAAK,EAAE;AAAC6B,MAAAA,MAAM,EAAE;AAAT,KAFX;AAGI,IAAA,IAAI,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAHV;AAII,IAAA,YAAY,EAAE,MAAM;AAAC,OAAC9B,YAAY,CAACyB,MAAb,CAAoB,CAApB,EAAuBG,IAAxB,IAAgC/B,KAAK,CAAC+B,IAAtC;AAA2C,KAJpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAaH,CA5DD;;AA8DA,eAAehC,KAAf","sourcesContent":["import React from 'react';\n\nimport ReactEcharts from 'echarts-for-react';\n\nconst Chart = (props) => {\n    console.log(props)\n    var chartOptions = {\n        title: {\n            text: props.title,\n            textStyle: {\n                color: '#FFF'\n            }\n        },\n        tooltip: {\n            trigger: 'axis',\n            formatter: function (params) {\n                params = params[0];\n                var date = new Date(params.name);\n                return date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear() + ' : ' + params.value[1];\n            },\n            axisPointer: {\n                animation: false\n            }\n        },\n        xAxis: {\n            type: 'time',\n            splitLine: {\n                show: false\n            },\n            nameTextStyle: {\n                \n            }\n        },\n        yAxis: {\n            type: 'value',\n            boundaryGap: [0, '100%'],\n            splitLine: {\n                show: false\n            }\n        },\n        series: [{\n            name: '模拟数据',\n            type: 'line',\n            showSymbol: false,\n            hoverAnimation: false,\n            data: props.data\n        }]\n    };\n\n\n        \n    return (\n        <div>\n            <ReactEcharts\n                option={chartOptions}\n                style={{height: 360}}\n                opts={{renderer: 'svg'}}\n                onChartReady={() => {[chartOptions.series[0].data] = props.data}}\n                \n                \n            />\n       </div>\n    );\n\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}