{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label.normal');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/timeline/TimelineAxis.js"],"names":["zrUtil","require","Axis","axisHelper","TimelineAxis","dim","scale","coordExtent","axisType","call","type","_autoLabelInterval","model","prototype","constructor","getLabelInterval","timelineModel","labelModel","getModel","labelInterval","get","getAxisLabelInterval","map","getTicks","dataToCoord","getFormattedLabels","getFont","isLabelIgnored","idx","getLabel","inherits","_default","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,kBAAD,CAAlB;;AAEA,IAAIE,UAAU,GAAGF,OAAO,CAAC,wBAAD,CAAxB;AAEA;;;;;;;;;;;;AAUA,IAAIG,YAAY,GAAG,UAAUC,GAAV,EAAeC,KAAf,EAAsBC,WAAtB,EAAmCC,QAAnC,EAA6C;AAC9DN,EAAAA,IAAI,CAACO,IAAL,CAAU,IAAV,EAAgBJ,GAAhB,EAAqBC,KAArB,EAA4BC,WAA5B;AACA;;;;;;;;;AASA,OAAKG,IAAL,GAAYF,QAAQ,IAAI,OAAxB;AACA;;;;;AAKA,OAAKG,kBAAL;AACA;;;;;AAKA,OAAKC,KAAL,GAAa,IAAb;AACD,CAxBD;;AA0BAR,YAAY,CAACS,SAAb,GAAyB;AACvBC,EAAAA,WAAW,EAAEV,YADU;;AAGvB;;;;AAIAW,EAAAA,gBAAgB,EAAE,YAAY;AAC5B,QAAIC,aAAa,GAAG,KAAKJ,KAAzB;AACA,QAAIK,UAAU,GAAGD,aAAa,CAACE,QAAd,CAAuB,cAAvB,CAAjB;AACA,QAAIC,aAAa,GAAGF,UAAU,CAACG,GAAX,CAAe,UAAf,CAApB;;AAEA,QAAID,aAAa,IAAI,IAAjB,IAAyBA,aAAa,IAAI,MAA9C,EAAsD;AACpD,aAAOA,aAAP;AACD;;AAED,QAAIA,aAAa,GAAG,KAAKR,kBAAzB;;AAEA,QAAI,CAACQ,aAAL,EAAoB;AAClBA,MAAAA,aAAa,GAAG,KAAKR,kBAAL,GAA0BR,UAAU,CAACkB,oBAAX,CAAgCrB,MAAM,CAACsB,GAAP,CAAW,KAAKhB,KAAL,CAAWiB,QAAX,EAAX,EAAkC,KAAKC,WAAvC,EAAoD,IAApD,CAAhC,EAA2FrB,UAAU,CAACsB,kBAAX,CAA8B,IAA9B,EAAoCR,UAAU,CAACG,GAAX,CAAe,WAAf,CAApC,CAA3F,EAA6JH,UAAU,CAACS,OAAX,EAA7J,EAAmLV,aAAa,CAACI,GAAd,CAAkB,QAAlB,MAAgC,YAAhC,GAA+C,CAA/C,GAAmD,EAAtO,EAA0OH,UAAU,CAACG,GAAX,CAAe,QAAf,CAA1O,CAA1C;AACD;;AAED,WAAOD,aAAP;AACD,GAvBsB;;AAyBvB;;;;;;;AAOAQ,EAAAA,cAAc,EAAE,UAAUC,GAAV,EAAe;AAC7B,QAAI,KAAKlB,IAAL,KAAc,UAAlB,EAA8B;AAC5B,UAAIS,aAAa,GAAG,KAAKJ,gBAAL,EAApB;AACA,aAAO,OAAOI,aAAP,KAAyB,UAAzB,IAAuC,CAACA,aAAa,CAACS,GAAD,EAAM,KAAKtB,KAAL,CAAWuB,QAAX,CAAoBD,GAApB,CAAN,CAArD,IAAwFA,GAAG,IAAIT,aAAa,GAAG,CAApB,CAAlG;AACD;AACF;AArCsB,CAAzB;AAuCAnB,MAAM,CAAC8B,QAAP,CAAgB1B,YAAhB,EAA8BF,IAA9B;AACA,IAAI6B,QAAQ,GAAG3B,YAAf;AACA4B,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label.normal');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}