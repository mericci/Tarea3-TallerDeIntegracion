{"ast":null,"code":"var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/zrender/lib/graphic/Style.js"],"names":["STYLE_COMMON_PROPS","Style","opts","host","extendFrom","createLinearGradient","ctx","obj","rect","x","x2","y","y2","global","width","height","canvasGradient","createRadialGradient","min","Math","r","prototype","constructor","fill","stroke","opacity","lineDash","lineDashOffset","shadowBlur","shadowOffsetX","shadowOffsetY","lineWidth","strokeNoScale","text","font","textFont","fontStyle","fontWeight","fontSize","fontFamily","textTag","textFill","textStroke","textWidth","textHeight","textStrokeWidth","textLineHeight","textPosition","textRect","textOffset","textAlign","textVerticalAlign","textDistance","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","transformText","textRotation","textOrigin","textBackgroundColor","textBorderColor","textBorderWidth","textBorderRadius","textPadding","rich","truncate","blend","bind","el","prevEl","style","prevStyle","firstDraw","i","length","prop","styleName","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","name","hasOwnProperty","set","value","clone","newStyle","getGradient","method","type","colorStops","addColorStop","offset","color","styleProto","_default","module","exports"],"mappings":"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","sourcesContent":["var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}