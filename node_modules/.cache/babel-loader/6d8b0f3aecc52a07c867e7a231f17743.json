{"ast":null,"code":"var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/helper/EffectLine.js"],"names":["graphic","require","Line","zrUtil","_symbol","createSymbol","vec2","curveUtil","EffectLine","lineData","idx","seriesScope","Group","call","add","createLine","_updateEffectSymbol","effectLineProto","prototype","itemModel","getItemModel","effectModel","getModel","size","get","symbolType","isArray","color","getItemVisual","symbol","childAt","_symbolType","remove","z2","culling","setStyle","getItemStyle","attr","setColor","_updateEffectAnimation","self","points","getItemLayout","period","loop","constantSpeed","delayExpr","retrieve","count","isDelayFunc","ignore","updateAnimationPoints","getLineLength","_period","_loop","stopAnimation","delay","__t","animator","animate","when","during","updateSymbolPosition","done","start","dist","__p1","__cp1","__p2","updateData","p1","p2","cp1","t","pos","position","quadraticAt","quadraticDerivativeAt","tx","ty","rotation","Math","atan2","PI","updateLayout","inherits","_default","module","exports"],"mappings":"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","sourcesContent":["var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}