{"ast":null,"code":"var _jsxFileName = \"/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/src/components/Chart.jsx\";\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from 'echarts/lib/echarts';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.boxRef = React.createRef();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    let chart = am4core.create(this.props.company, am4charts.XYChart);\n    chart.data = this.props.data;\n    chart.colors.step = 2;\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n    dateAxis.color = \"#FFF\";\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.renderer.minWidth = 35;\n    let series = chart.series.push(new am4charts.LineSeries());\n    series.dataFields.dateX = \"date\";\n    series.dataFields.valueY = \"value\";\n    series.tooltipText = \"{valueY.value}\";\n    chart.cursor = new am4charts.XYCursor();\n    this.chart = chart;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.prueba !== prevProps.prueba) {\n      this.chart.data = this.props.data;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: this.props.company,\n      style: {\n        width: \"100%\",\n        height: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\n;\nexport default Chart;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/src/components/Chart.jsx"],"names":["React","Component","ReactEcharts","echarts","am4core","am4charts","am4themes_animated","useTheme","Chart","constructor","props","boxRef","createRef","state","componentDidMount","chart","create","company","XYChart","data","colors","step","dateAxis","xAxes","push","DateAxis","renderer","grid","template","location","color","valueAxis","yAxes","ValueAxis","tooltip","disabled","minWidth","series","LineSeries","dataFields","dateX","valueY","tooltipText","cursor","XYCursor","componentDidUpdate","prevProps","prueba","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAO,KAAKC,SAAZ,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AAEAF,OAAO,CAACG,QAAR,CAAiBD,kBAAjB;;AAGA,MAAME,KAAN,SAAoBP,SAApB,CAA8B;AAC1BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAcX,KAAK,CAACY,SAAN,EAAd;AACA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAGX,OAAO,CAACY,MAAR,CAAe,KAAKN,KAAL,CAAWO,OAA1B,EAAmCZ,SAAS,CAACa,OAA7C,CAAZ;AAEAH,IAAAA,KAAK,CAACI,IAAN,GAAa,KAAKT,KAAL,CAAWS,IAAxB;AAEAJ,IAAAA,KAAK,CAACK,MAAN,CAAaC,IAAb,GAAoB,CAApB;AAEA,QAAIC,QAAQ,GAAGP,KAAK,CAACQ,KAAN,CAAYC,IAAZ,CAAiB,IAAInB,SAAS,CAACoB,QAAd,EAAjB,CAAf;AACAH,IAAAA,QAAQ,CAACI,QAAT,CAAkBC,IAAlB,CAAuBC,QAAvB,CAAgCC,QAAhC,GAA2C,CAA3C;AACAP,IAAAA,QAAQ,CAACQ,KAAT,GAAgB,MAAhB;AAEA,QAAIC,SAAS,GAAGhB,KAAK,CAACiB,KAAN,CAAYR,IAAZ,CAAiB,IAAInB,SAAS,CAAC4B,SAAd,EAAjB,CAAhB;AACAF,IAAAA,SAAS,CAACG,OAAV,CAAkBC,QAAlB,GAA6B,IAA7B;AACAJ,IAAAA,SAAS,CAACL,QAAV,CAAmBU,QAAnB,GAA8B,EAA9B;AAEA,QAAIC,MAAM,GAAGtB,KAAK,CAACsB,MAAN,CAAab,IAAb,CAAkB,IAAInB,SAAS,CAACiC,UAAd,EAAlB,CAAb;AACAD,IAAAA,MAAM,CAACE,UAAP,CAAkBC,KAAlB,GAA0B,MAA1B;AACAH,IAAAA,MAAM,CAACE,UAAP,CAAkBE,MAAlB,GAA2B,OAA3B;AAEAJ,IAAAA,MAAM,CAACK,WAAP,GAAqB,gBAArB;AACA3B,IAAAA,KAAK,CAAC4B,MAAN,GAAe,IAAItC,SAAS,CAACuC,QAAd,EAAf;AAEA,SAAK7B,KAAL,GAAaA,KAAb;AACH;;AAED8B,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAE1B,QAAI,KAAKpC,KAAL,CAAWqC,MAAX,KAAsBD,SAAS,CAACC,MAApC,EAA4C;AACxC,WAAKhC,KAAL,CAAWI,IAAX,GAAkB,KAAKT,KAAL,CAAWS,IAA7B;AAEH;AACJ;;AAGD6B,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,EAAE,EAAE,KAAKtC,KAAL,CAAWO,OAApB;AAA6B,MAAA,KAAK,EAAE;AAAEgC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAhDyB;;AAkD7B;AAED,eAAe1C,KAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport ReactEcharts from 'echarts-for-react';\nimport echarts from 'echarts/lib/echarts';\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\n\nclass Chart extends Component {\n    constructor(props){\n        super(props);\n        this.boxRef = React.createRef();\n        this.state = {\n\n        };    \n    };\n\n    componentDidMount() {\n        let chart = am4core.create(this.props.company, am4charts.XYChart);\n        \n        chart.data = this.props.data;\n\n        chart.colors.step = 2;\n\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n        dateAxis.renderer.grid.template.location = 0;\n        dateAxis.color= \"#FFF\";\n    \n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        valueAxis.tooltip.disabled = true;\n        valueAxis.renderer.minWidth = 35;\n    \n        let series = chart.series.push(new am4charts.LineSeries());\n        series.dataFields.dateX = \"date\";\n        series.dataFields.valueY = \"value\";\n    \n        series.tooltipText = \"{valueY.value}\";\n        chart.cursor = new am4charts.XYCursor();\n    \n        this.chart = chart;\n    };\n\n    componentDidUpdate(prevProps) {\n\n        if (this.props.prueba !== prevProps.prueba) {\n            this.chart.data = this.props.data\n\n        }\n    }\n\n        \n    render() {\n\n        return (\n            <div id={this.props.company} style={{ width: \"100%\", height: '300px' }}></div>\n        );\n    }\n\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}