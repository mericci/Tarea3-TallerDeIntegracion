{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n/**\n * @module echarts/chart/helper/Line\n */\n\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n    labelModel = itemModel.getModel('label.normal');\n    hoverLabelModel = itemModel.getModel('label.emphasis');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var defaultText;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    var rawVal = seriesModel.getRawValue(idx);\n    defaultText = rawVal == null ? defaultText = lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    defaultLabelColor = visualColor || '#000';\n    normalText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType), defaultText);\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/helper/Line.js"],"names":["zrUtil","require","vector","symbolUtil","LinePath","graphic","_number","round","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","createSymbol","name","lineData","idx","color","getItemVisual","symbolType","symbolSize","isArray","symbolPath","createLine","points","line","setLinePoints","shape","targetShape","p1","p2","cp1","x1","y1","x2","y2","percent","cpx1","cpy1","NaN","updateSymbolAndLabelBeforeLineUpdate","lineGroup","symbolFrom","childOfName","symbolTo","label","ignore","invScale","parentNode","parent","scale","__dirty","fromPos","pointAt","toPos","d","sub","normalize","attr","tangent","tangentAt","Math","PI","atan2","textPosition","textAlign","textVerticalAlign","distance","__position","halfPercent","n","cp","rotation","style","__verticalAlign","__textAlign","position","Line","seriesScope","Group","call","_createLine","lineProto","prototype","beforeUpdate","seriesModel","hostModel","linePoints","getItemLayout","initProps","add","Text","each","symbol","_updateCommonStl","updateData","target","updateProps","key","remove","lineStyle","hoverLineStyle","labelModel","hoverLabelModel","hasItemOption","itemModel","getItemModel","getModel","getLineStyle","visualColor","visualOpacity","retrieve3","opacity","useStyle","defaults","strokeNoScale","fill","stroke","hoverStyle","setColor","setStyle","showLabel","getShallow","hoverShowLabel","defaultLabelColor","defaultText","normalText","emphasisText","rawVal","getRawValue","getName","isFinite","retrieve2","getFormattedLabel","dataType","labelStyle","setTextStyle","text","autoColor","get","textFill","getTextColor","fontStyle","fontWeight","fontSize","fontFamily","setHoverStyle","highlight","trigger","downplay","updateLayout","linePath","dirty","inherits","_default","module","exports"],"mappings":"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","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n    labelModel = itemModel.getModel('label.normal');\n    hoverLabelModel = itemModel.getModel('label.emphasis');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var defaultText;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    var rawVal = seriesModel.getRawValue(idx);\n    defaultText = rawVal == null ? defaultText = lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    defaultLabelColor = visualColor || '#000';\n    normalText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType), defaultText);\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}