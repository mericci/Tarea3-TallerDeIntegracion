{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/candlestick/CandlestickView.js"],"names":["zrUtil","require","ChartView","graphic","_whiskerBoxCommon","viewMixin","CandlestickView","extend","type","getStyleUpdater","updateStyle","dispose","noop","mixin","normalStyleAccessPath","emphasisStyleAccessPath","itemGroup","data","idx","itemModel","getItemModel","normalItemStyleModel","getModel","color","getItemVisual","borderColor","itemStyle","getItemStyle","whiskerEl","childAt","whiskerIndex","useStyle","style","stroke","bodyEl","bodyIndex","fill","hoverStyle","setHoverStyle","_default","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAvB;;AAEA,IAAIE,OAAO,GAAGF,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,4BAAD,CAA/B;;AAEA,IAAII,SAAS,GAAGD,iBAAiB,CAACC,SAAlC;AACA,IAAIC,eAAe,GAAGJ,SAAS,CAACK,MAAV,CAAiB;AACrCC,EAAAA,IAAI,EAAE,aAD+B;AAErCC,EAAAA,eAAe,EAAE,YAAY;AAC3B,WAAOC,WAAP;AACD,GAJoC;AAKrCC,EAAAA,OAAO,EAAEX,MAAM,CAACY;AALqB,CAAjB,CAAtB;AAOAZ,MAAM,CAACa,KAAP,CAAaP,eAAb,EAA8BD,SAA9B,EAAyC,IAAzC,E,CAAgD;;AAEhD,IAAIS,qBAAqB,GAAG,CAAC,WAAD,EAAc,QAAd,CAA5B;AACA,IAAIC,uBAAuB,GAAG,CAAC,WAAD,EAAc,UAAd,CAA9B;;AAEA,SAASL,WAAT,CAAqBM,SAArB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2C;AACzC,MAAIC,SAAS,GAAGF,IAAI,CAACG,YAAL,CAAkBF,GAAlB,CAAhB;AACA,MAAIG,oBAAoB,GAAGF,SAAS,CAACG,QAAV,CAAmBR,qBAAnB,CAA3B;AACA,MAAIS,KAAK,GAAGN,IAAI,CAACO,aAAL,CAAmBN,GAAnB,EAAwB,OAAxB,CAAZ;AACA,MAAIO,WAAW,GAAGR,IAAI,CAACO,aAAL,CAAmBN,GAAnB,EAAwB,aAAxB,KAA0CK,KAA5D,CAJyC,CAI0B;AACnE;;AAEA,MAAIG,SAAS,GAAGL,oBAAoB,CAACM,YAArB,CAAkC,CAAC,OAAD,EAAU,QAAV,EAAoB,aAApB,EAAmC,cAAnC,CAAlC,CAAhB;AACA,MAAIC,SAAS,GAAGZ,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,YAA5B,CAAhB;AACAF,EAAAA,SAAS,CAACG,QAAV,CAAmBL,SAAnB;AACAE,EAAAA,SAAS,CAACI,KAAV,CAAgBC,MAAhB,GAAyBR,WAAzB;AACA,MAAIS,MAAM,GAAGlB,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACmB,SAA5B,CAAb;AACAD,EAAAA,MAAM,CAACH,QAAP,CAAgBL,SAAhB;AACAQ,EAAAA,MAAM,CAACF,KAAP,CAAaI,IAAb,GAAoBb,KAApB;AACAW,EAAAA,MAAM,CAACF,KAAP,CAAaC,MAAb,GAAsBR,WAAtB;AACA,MAAIY,UAAU,GAAGlB,SAAS,CAACG,QAAV,CAAmBP,uBAAnB,EAA4CY,YAA5C,EAAjB;AACAxB,EAAAA,OAAO,CAACmC,aAAR,CAAsBtB,SAAtB,EAAiCqB,UAAjC;AACD;;AAED,IAAIE,QAAQ,GAAGjC,eAAf;AACAkC,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}