{"ast":null,"code":"var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/action/createDataSelectAction.js"],"names":["echarts","require","zrUtil","_default","seriesType","actionInfos","each","actionInfo","update","registerAction","payload","ecModel","selected","eachComponent","mainType","subType","query","seriesModel","method","name","dataIndex","data","getData","idx","getName","isSelected","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;;AAEA,SAASE,QAAT,CAAkBC,UAAlB,EAA8BC,WAA9B,EAA2C;AACzCH,EAAAA,MAAM,CAACI,IAAP,CAAYD,WAAZ,EAAyB,UAAUE,UAAV,EAAsB;AAC7CA,IAAAA,UAAU,CAACC,MAAX,GAAoB,YAApB;AACA;;;;;;AAMAR,IAAAA,OAAO,CAACS,cAAR,CAAuBF,UAAvB,EAAmC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4B;AAC7D,UAAIC,QAAQ,GAAG,EAAf;AACAD,MAAAA,OAAO,CAACE,aAAR,CAAsB;AACpBC,QAAAA,QAAQ,EAAE,QADU;AAEpBC,QAAAA,OAAO,EAAEX,UAFW;AAGpBY,QAAAA,KAAK,EAAEN;AAHa,OAAtB,EAIG,UAAUO,WAAV,EAAuB;AACxB,YAAIA,WAAW,CAACV,UAAU,CAACW,MAAZ,CAAf,EAAoC;AAClCD,UAAAA,WAAW,CAACV,UAAU,CAACW,MAAZ,CAAX,CAA+BR,OAAO,CAACS,IAAvC,EAA6CT,OAAO,CAACU,SAArD;AACD;;AAED,YAAIC,IAAI,GAAGJ,WAAW,CAACK,OAAZ,EAAX,CALwB,CAKU;;AAElCD,QAAAA,IAAI,CAACf,IAAL,CAAU,UAAUiB,GAAV,EAAe;AACvB,cAAIJ,IAAI,GAAGE,IAAI,CAACG,OAAL,CAAaD,GAAb,CAAX;AACAX,UAAAA,QAAQ,CAACO,IAAD,CAAR,GAAiBF,WAAW,CAACQ,UAAZ,CAAuBN,IAAvB,KAAgC,KAAjD;AACD,SAHD;AAID,OAfD;AAgBA,aAAO;AACLA,QAAAA,IAAI,EAAET,OAAO,CAACS,IADT;AAELP,QAAAA,QAAQ,EAAEA;AAFL,OAAP;AAID,KAtBD;AAuBD,GA/BD;AAgCD;;AAEDc,MAAM,CAACC,OAAP,GAAiBxB,QAAjB","sourcesContent":["var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}