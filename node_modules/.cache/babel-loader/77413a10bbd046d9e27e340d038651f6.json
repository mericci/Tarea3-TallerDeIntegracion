{"ast":null,"code":"var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\n\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/zrender/lib/core/PathProxy.js"],"names":["curve","require","vec2","bbox","BoundingRect","_config","dpr","devicePixelRatio","CMD","M","L","C","Q","A","Z","R","min","max","min2","max2","mathMin","Math","mathMax","mathCos","cos","mathSin","sin","mathSqrt","sqrt","mathAbs","abs","hasTypedArray","Float32Array","PathProxy","notSaveData","_saveData","data","_ctx","prototype","constructor","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","sx","sy","getContext","beginPath","ctx","moveTo","x","y","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x1","y1","x2","y2","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","r","startAngle","endAngle","anticlockwise","arcTo","radius","rect","w","h","closePath","x0","y0","fill","toStatic","stroke","setLineDash","lineDash","Array","lineDashSum","i","length","setLineDashOffset","offset","len","setData","appendPath","path","appendSize","appendPathData","k","cmd","arguments","_expandData","_prevCmd","newData","dashSum","dx","dy","dist","dash","nDash","idx","t","cubicAt","bezierLen","tmpLen","getBoundingRect","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","psi","fromArc","width","height","rebuildPath","d","ux","uy","theta","dTheta","fs","scaleX","scaleY","isEllipse","translate","rotate","scale","_default","module","exports"],"mappings":"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","sourcesContent":["var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}