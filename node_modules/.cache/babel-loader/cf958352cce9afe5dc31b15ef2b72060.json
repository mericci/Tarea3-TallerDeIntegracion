{"ast":null,"code":"var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\n\n\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!(n1 instanceof Node)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!(n2 instanceof Node)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (n1 instanceof Node) {\n    n1 = n1.id;\n  }\n\n  if (n2 instanceof Node) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!(startNode instanceof Node)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nvar _default = Graph;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/data/Graph.js"],"names":["_config","require","__DEV__","zrUtil","generateNodeKey","id","Graph","directed","_directed","nodes","edges","_nodesMap","_edgesMap","data","edgeData","graphProto","prototype","type","isDirected","addNode","dataIndex","nodesMap","node","Node","hostGraph","push","getNodeByIndex","rawIdx","getRawIndex","getNodeById","addEdge","n1","n2","edgesMap","key","edge","Edge","outEdges","inEdges","getEdgeByIndex","getEdge","eachNode","cb","context","len","length","i","call","eachEdge","node1","node2","breadthFirstTraverse","startNode","direction","edgeType","__visited","queue","currentNode","shift","e","otherNode","update","count","filterSelf","idx","clone","graph","constructor","degree","inDegree","outDegree","getModel","path","itemModel","getItemModel","createGraphDataProxyMixin","hostName","dataName","getValue","dimension","get","getDimension","setVisual","value","setItemVisual","getVisual","ignoreParent","getItemVisual","setLayout","layout","merge","setItemLayout","getLayout","getItemLayout","getGraphicEl","getItemGraphicEl","mixin","_default","module","exports"],"mappings":"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","sourcesContent":["var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!(n1 instanceof Node)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!(n2 instanceof Node)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (n1 instanceof Node) {\n    n1 = n1.id;\n  }\n\n  if (n2 instanceof Node) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!(startNode instanceof Node)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nvar _default = Graph;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}