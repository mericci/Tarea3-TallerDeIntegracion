{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\n\n\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js"],"names":["zrUtil","require","modelUtil","_default","finder","ecModel","point","seriesIndex","seriesModel","getSeriesByIndex","data","getData","dataIndex","queryDataIndex","isArray","el","getItemGraphicEl","coordSys","coordinateSystem","getTooltipPosition","dataToPoint","getValues","map","dimensions","dim","coordDimToDataDim","rect","getBoundingRect","clone","applyTransform","transform","x","width","y","height","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAvB;AAEA;;;;;;;AAKA,SAASE,QAAT,CAAkBC,MAAlB,EAA0BC,OAA1B,EAAmC;AACjC,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,WAAW,GAAGH,MAAM,CAACG,WAAzB;AACA,MAAIC,WAAJ;;AAEA,MAAID,WAAW,IAAI,IAAf,IAAuB,EAAEC,WAAW,GAAGH,OAAO,CAACI,gBAAR,CAAyBF,WAAzB,CAAhB,CAA3B,EAAmF;AACjF,WAAO;AACLD,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD;;AAED,MAAII,IAAI,GAAGF,WAAW,CAACG,OAAZ,EAAX;AACA,MAAIC,SAAS,GAAGV,SAAS,CAACW,cAAV,CAAyBH,IAAzB,EAA+BN,MAA/B,CAAhB;;AAEA,MAAIQ,SAAS,IAAI,IAAb,IAAqBZ,MAAM,CAACc,OAAP,CAAeF,SAAf,CAAzB,EAAoD;AAClD,WAAO;AACLN,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD;;AAED,MAAIS,EAAE,GAAGL,IAAI,CAACM,gBAAL,CAAsBJ,SAAtB,CAAT;AACA,MAAIK,QAAQ,GAAGT,WAAW,CAACU,gBAA3B;;AAEA,MAAIV,WAAW,CAACW,kBAAhB,EAAoC;AAClCb,IAAAA,KAAK,GAAGE,WAAW,CAACW,kBAAZ,CAA+BP,SAA/B,KAA6C,EAArD;AACD,GAFD,MAEO,IAAIK,QAAQ,IAAIA,QAAQ,CAACG,WAAzB,EAAsC;AAC3Cd,IAAAA,KAAK,GAAGW,QAAQ,CAACG,WAAT,CAAqBV,IAAI,CAACW,SAAL,CAAerB,MAAM,CAACsB,GAAP,CAAWL,QAAQ,CAACM,UAApB,EAAgC,UAAUC,GAAV,EAAe;AACzF,aAAOhB,WAAW,CAACiB,iBAAZ,CAA8BD,GAA9B,EAAmC,CAAnC,CAAP;AACD,KAF2C,CAAf,EAEzBZ,SAFyB,EAEd,IAFc,CAArB,KAEiB,EAFzB;AAGD,GAJM,MAIA,IAAIG,EAAJ,EAAQ;AACb;AACA,QAAIW,IAAI,GAAGX,EAAE,CAACY,eAAH,GAAqBC,KAArB,EAAX;AACAF,IAAAA,IAAI,CAACG,cAAL,CAAoBd,EAAE,CAACe,SAAvB;AACAxB,IAAAA,KAAK,GAAG,CAACoB,IAAI,CAACK,CAAL,GAASL,IAAI,CAACM,KAAL,GAAa,CAAvB,EAA0BN,IAAI,CAACO,CAAL,GAASP,IAAI,CAACQ,MAAL,GAAc,CAAjD,CAAR;AACD;;AAED,SAAO;AACL5B,IAAAA,KAAK,EAAEA,KADF;AAELS,IAAAA,EAAE,EAAEA;AAFC,GAAP;AAID;;AAEDoB,MAAM,CAACC,OAAP,GAAiBjC,QAAjB","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}