{"ast":null,"code":"var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(coordSys, seriesModel, api);\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  dispose: function () {},\n  _renderOnCartesianAndCalendar: function (coordSys, seriesModel, api) {\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var width = xAxis.getBandWidth();\n      var height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle.normal';\n    var hoverItemStyleQuery = 'itemStyle.emphasis';\n    var labelQuery = 'label.normal';\n    var hoverLabelQuery = 'label.emphasis';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel('label.normal');\n    var hoverLabelModel = seriesModel.getModel('label.emphasis');\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0], seriesModel.coordDimToDataDim('value')[0]] : [seriesModel.coordDimToDataDim('time')[0], seriesModel.coordDimToDataDim('value')[0]];\n    data.each(function (idx) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          return;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          return;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    });\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform().transform;\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var points = data.mapArray(['lng', 'lat', 'value'], function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  }\n});\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/heatmap/HeatmapView.js"],"names":["_config","require","__DEV__","echarts","graphic","HeatmapLayer","zrUtil","getIsInPiecewiseRange","dataExtent","pieceList","selected","dataSpan","map","piece","interval","len","length","lastIndex","val","i","getIsInContinuousRange","range","isGeoCoordSys","coordSys","dimensions","_default","extendChartView","type","render","seriesModel","ecModel","api","visualMapOfThisSeries","eachComponent","visualMap","eachTargetSeries","targetSeries","group","removeAll","coordinateSystem","_renderOnCartesianAndCalendar","_renderOnGeo","dispose","xAxis","getAxis","yAxis","width","getBandWidth","height","data","getData","itemStyleQuery","hoverItemStyleQuery","labelQuery","hoverLabelQuery","style","getModel","getItemStyle","hoverStl","labelModel","hoverLabelModel","coordSysType","dataDims","coordDimToDataDim","each","idx","rect","isNaN","get","point","dataToPoint","Rect","shape","x","y","fill","getItemVisual","opacity","z2","dataToRect","contentShape","itemModel","getItemModel","hasItemOption","rawValue","getRawValue","defaultText","setLabelStyle","labelFetcher","labelDataIndex","isRectText","setStyle","setHoverStyle","extend","add","setItemGraphicEl","geo","visualMapModel","inRangeVisuals","targetVisuals","inRange","outOfRangeVisuals","outOfRange","hmLayer","_hmLayer","blurSize","pointSize","minOpacity","maxOpacity","getViewRect","clone","roamTransform","getRoamTransform","transform","applyTransform","Math","max","x2","min","getWidth","y2","getHeight","points","mapArray","lng","lat","value","pt","push","getExtent","isInRange","option","getPieceList","update","color","getNormalizer","getColorMapper","img","Image","image","canvas","silent","module","exports"],"mappings":"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","sourcesContent":["var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(coordSys, seriesModel, api);\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  dispose: function () {},\n  _renderOnCartesianAndCalendar: function (coordSys, seriesModel, api) {\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var width = xAxis.getBandWidth();\n      var height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle.normal';\n    var hoverItemStyleQuery = 'itemStyle.emphasis';\n    var labelQuery = 'label.normal';\n    var hoverLabelQuery = 'label.emphasis';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel('label.normal');\n    var hoverLabelModel = seriesModel.getModel('label.emphasis');\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0], seriesModel.coordDimToDataDim('value')[0]] : [seriesModel.coordDimToDataDim('time')[0], seriesModel.coordDimToDataDim('value')[0]];\n    data.each(function (idx) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          return;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          return;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    });\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform().transform;\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var points = data.mapArray(['lng', 'lat', 'value'], function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  }\n});\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}