{"ast":null,"code":"var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\n\n\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/scale/Ordinal.js"],"names":["zrUtil","require","Scale","scaleProto","prototype","OrdinalScale","extend","type","init","data","extent","_data","_extent","length","parse","val","indexOf","Math","round","contain","rank","call","normalize","scale","getTicks","ticks","push","getLabel","n","count","unionExtentFromData","dim","unionExtent","getDataExtent","niceTicks","noop","niceExtent","create","_default","module","exports"],"mappings":"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","sourcesContent":["var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}