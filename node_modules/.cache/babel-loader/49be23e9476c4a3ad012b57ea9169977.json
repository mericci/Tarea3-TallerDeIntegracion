{"ast":null,"code":"var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n/**\n * @module echarts/chart/helper/LineDraw\n */\n\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n/**\n * @param {module:echarts/data/List} lineData\n */\n\nlineDrawProto.updateData = function (lineData) {\n  var oldLineData = this._lineData;\n  var group = this.group;\n  var LineCtor = this._ctor;\n  var hostModel = lineData.hostModel;\n  var seriesScope = {\n    lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n    labelModel: hostModel.getModel('label.normal'),\n    hoverLabelModel: hostModel.getModel('label.emphasis')\n  };\n  lineData.diff(oldLineData).add(function (idx) {\n    if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n      return;\n    }\n\n    var lineGroup = new LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, lineGroup);\n    group.add(lineGroup);\n  }).update(function (newIdx, oldIdx) {\n    var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n      group.remove(lineGroup);\n      return;\n    }\n\n    if (!lineGroup) {\n      lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n    } else {\n      lineGroup.updateData(lineData, newIdx, seriesScope);\n    }\n\n    lineData.setItemGraphicEl(newIdx, lineGroup);\n    group.add(lineGroup);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n  this._lineData = lineData;\n};\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LineDraw;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/martin/Escritorio/Taller de Integracion/Tarea3-TallerDeIntegracion/node_modules/react-echarts/node_modules/echarts/lib/chart/helper/LineDraw.js"],"names":["graphic","require","LineGroup","isPointNaN","pt","isNaN","lineNeedsDraw","pts","LineDraw","ctor","_ctor","group","Group","lineDrawProto","prototype","updateData","lineData","oldLineData","_lineData","LineCtor","hostModel","seriesScope","lineStyle","getModel","getLineStyle","hoverLineStyle","labelModel","hoverLabelModel","diff","add","idx","getItemLayout","lineGroup","setItemGraphicEl","update","newIdx","oldIdx","getItemGraphicEl","remove","execute","updateLayout","eachItemGraphicEl","el","removeAll","_default","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,oBAAD,CAArB;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,QAAD,CAAvB;AAEA;;;;;AAGA,SAASE,UAAT,CAAoBC,EAApB,EAAwB;AACtB,SAAOC,KAAK,CAACD,EAAE,CAAC,CAAD,CAAH,CAAL,IAAgBC,KAAK,CAACD,EAAE,CAAC,CAAD,CAAH,CAA5B;AACD;;AAED,SAASE,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,SAAO,CAACJ,UAAU,CAACI,GAAG,CAAC,CAAD,CAAJ,CAAX,IAAuB,CAACJ,UAAU,CAACI,GAAG,CAAC,CAAD,CAAJ,CAAzC;AACD;AACD;;;;;;AAMA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,OAAKC,KAAL,GAAaD,IAAI,IAAIP,SAArB;AACA,OAAKS,KAAL,GAAa,IAAIX,OAAO,CAACY,KAAZ,EAAb;AACD;;AAED,IAAIC,aAAa,GAAGL,QAAQ,CAACM,SAA7B;AACA;;;;AAIAD,aAAa,CAACE,UAAd,GAA2B,UAAUC,QAAV,EAAoB;AAC7C,MAAIC,WAAW,GAAG,KAAKC,SAAvB;AACA,MAAIP,KAAK,GAAG,KAAKA,KAAjB;AACA,MAAIQ,QAAQ,GAAG,KAAKT,KAApB;AACA,MAAIU,SAAS,GAAGJ,QAAQ,CAACI,SAAzB;AACA,MAAIC,WAAW,GAAG;AAChBC,IAAAA,SAAS,EAAEF,SAAS,CAACG,QAAV,CAAmB,kBAAnB,EAAuCC,YAAvC,EADK;AAEhBC,IAAAA,cAAc,EAAEL,SAAS,CAACG,QAAV,CAAmB,oBAAnB,EAAyCC,YAAzC,EAFA;AAGhBE,IAAAA,UAAU,EAAEN,SAAS,CAACG,QAAV,CAAmB,cAAnB,CAHI;AAIhBI,IAAAA,eAAe,EAAEP,SAAS,CAACG,QAAV,CAAmB,gBAAnB;AAJD,GAAlB;AAMAP,EAAAA,QAAQ,CAACY,IAAT,CAAcX,WAAd,EAA2BY,GAA3B,CAA+B,UAAUC,GAAV,EAAe;AAC5C,QAAI,CAACxB,aAAa,CAACU,QAAQ,CAACe,aAAT,CAAuBD,GAAvB,CAAD,CAAlB,EAAiD;AAC/C;AACD;;AAED,QAAIE,SAAS,GAAG,IAAIb,QAAJ,CAAaH,QAAb,EAAuBc,GAAvB,EAA4BT,WAA5B,CAAhB;AACAL,IAAAA,QAAQ,CAACiB,gBAAT,CAA0BH,GAA1B,EAA+BE,SAA/B;AACArB,IAAAA,KAAK,CAACkB,GAAN,CAAUG,SAAV;AACD,GARD,EAQGE,MARH,CAQU,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AAClC,QAAIJ,SAAS,GAAGf,WAAW,CAACoB,gBAAZ,CAA6BD,MAA7B,CAAhB;;AAEA,QAAI,CAAC9B,aAAa,CAACU,QAAQ,CAACe,aAAT,CAAuBI,MAAvB,CAAD,CAAlB,EAAoD;AAClDxB,MAAAA,KAAK,CAAC2B,MAAN,CAAaN,SAAb;AACA;AACD;;AAED,QAAI,CAACA,SAAL,EAAgB;AACdA,MAAAA,SAAS,GAAG,IAAIb,QAAJ,CAAaH,QAAb,EAAuBmB,MAAvB,EAA+Bd,WAA/B,CAAZ;AACD,KAFD,MAEO;AACLW,MAAAA,SAAS,CAACjB,UAAV,CAAqBC,QAArB,EAA+BmB,MAA/B,EAAuCd,WAAvC;AACD;;AAEDL,IAAAA,QAAQ,CAACiB,gBAAT,CAA0BE,MAA1B,EAAkCH,SAAlC;AACArB,IAAAA,KAAK,CAACkB,GAAN,CAAUG,SAAV;AACD,GAxBD,EAwBGM,MAxBH,CAwBU,UAAUR,GAAV,EAAe;AACvBnB,IAAAA,KAAK,CAAC2B,MAAN,CAAarB,WAAW,CAACoB,gBAAZ,CAA6BP,GAA7B,CAAb;AACD,GA1BD,EA0BGS,OA1BH;AA2BA,OAAKrB,SAAL,GAAiBF,QAAjB;AACD,CAvCD;;AAyCAH,aAAa,CAAC2B,YAAd,GAA6B,YAAY;AACvC,MAAIxB,QAAQ,GAAG,KAAKE,SAApB;AACAF,EAAAA,QAAQ,CAACyB,iBAAT,CAA2B,UAAUC,EAAV,EAAcZ,GAAd,EAAmB;AAC5CY,IAAAA,EAAE,CAACF,YAAH,CAAgBxB,QAAhB,EAA0Bc,GAA1B;AACD,GAFD,EAEG,IAFH;AAGD,CALD;;AAOAjB,aAAa,CAACyB,MAAd,GAAuB,YAAY;AACjC,OAAK3B,KAAL,CAAWgC,SAAX;AACD,CAFD;;AAIA,IAAIC,QAAQ,GAAGpC,QAAf;AACAqC,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n/**\n * @param {module:echarts/data/List} lineData\n */\n\nlineDrawProto.updateData = function (lineData) {\n  var oldLineData = this._lineData;\n  var group = this.group;\n  var LineCtor = this._ctor;\n  var hostModel = lineData.hostModel;\n  var seriesScope = {\n    lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n    labelModel: hostModel.getModel('label.normal'),\n    hoverLabelModel: hostModel.getModel('label.emphasis')\n  };\n  lineData.diff(oldLineData).add(function (idx) {\n    if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n      return;\n    }\n\n    var lineGroup = new LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, lineGroup);\n    group.add(lineGroup);\n  }).update(function (newIdx, oldIdx) {\n    var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n      group.remove(lineGroup);\n      return;\n    }\n\n    if (!lineGroup) {\n      lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n    } else {\n      lineGroup.updateData(lineData, newIdx, seriesScope);\n    }\n\n    lineData.setItemGraphicEl(newIdx, lineGroup);\n    group.add(lineGroup);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n  this._lineData = lineData;\n};\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LineDraw;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}